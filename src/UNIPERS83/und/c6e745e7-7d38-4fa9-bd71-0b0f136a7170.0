{2,
{28,0,0,0,0,1,1,1,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Универсальные подбор и обработка объектов (с возможностью обработки табличных частей)"}
},0,0,1,1,1,0,1,0,
{6,1952a54f-35ad-4928-902f-df212ab38ca3,"ПриСохраненииДанныхВНастройкахНаСервере",3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",52dbb775-1631-4fd5-8c55-1615b5881dac,"ПередЗакрытием",79cea13e-f6fb-4483-905d-713326405771,"ПриЗагрузкеДанныхИзНастроекНаСервере",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",e773807c-0c0c-4689-a093-231ddcd6409f,"ПередЗагрузкойДанныхИзНастроекНаСервере"},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},4,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{73,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаНастройкиОбработки",
{1,0},1,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{74,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаПроголосовать",
{1,0},1,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,3,
{0},"",-1,-1,0,
{
{#base64:R0lGODlhEgARAPcAAP9KAP+LVu/y6v9hFf/q9P5mGf9mG/+ofiylK63xk67xkh2M
E/wxABKkI/7///9aC/3n3CGkG/9uKP9eFySkH/5eG5jjgvViGPLHqv/ApTGkMf/M
tf75/xmlDf/n3v+6mRWlBv+7bP9VAA93AAl+CYvuXf+1kv+qlf/t8p3ud/+SXJnq
dh+XD/+keP+7qP/u5QCTAPhNAP/AuwCNAESzQ4nbev/Ms/tbC5vtef+PWYqyGkO4
Tf93SSqjDa3vkv13NP/s4v9/QiyqJv+fb6b6hv+ofUvaHv+BQv/SyP/c1fNLACWh
EHGwb//3+v/59SF5AP9yLPf7+zGPL3vpS6DljP/v5//h0mapY8n/qv58O7b9l1TF
QIXtcf9hFHyYTf97Ov6pf////v/NthWiJGHhN/+ESf+HSwmjAHLTZv/TvDSYGfz7
/yuYFv+JXtDo1f+MU/++o/+xlf/Mtw2MCXzmVbb1mRekGJ7wfR6tEeVAAI3uev/9
/QuVCCWRC5j6dyinI3P2bZjvbf+UdKD5dv+smhOwAMTytKLvfDCmLRqdHfYsAP9h
E/8zAP/Co6XxiI7seP+9nPrh1P1RAP/Ezv9nHP38/+Lz5J7sf//p3v/byP/Cq3Xv
eP/07PL39v9jGPpSAP/PuP+LVf9sJQ2pACWjC6vrmP/39P+ZZgCjER2NF4btcZXu
af+uielMAP+icyWWHf+tg3fmWhWcDf///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACH5BAAAAAAALAAAAAASABEAAAjvAGcJHCjwBcGDCGepgAIk
YcIcRQ4McYhwQBVOlDxQHJjpi6k9QZJsFBjqlBVMmrzsoMGEoJMfn24sEpEGlBgU
fNDUmCFg4BFPLWBB2oAETgYCdozciYBhoA1Gbz6YiBPChYxJLMg4orCGYKMYBVgR
0kGKjRoYdOogSITozxWBDgx0ObFkk6pHl3D4METFQilZA109ENQDkB8iWhSsOLRq
ChYhA5WIatMHVYMxGhKk2NIBBJ5UAsNIKhPgQp5WFUboCXTGTSdLHARmAWAGwAQ5
TXg84VJiVKWDYBgokkBwQaxBhaIghBDpoJQ5r0gQDAgAOw==}
},0},1,
{"Pattern"},"",2},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{95,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаСохранитьНастройкиОтборов",
{1,0},1,
{16,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{96,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаЗагрузитьНастройкиОтборов",
{1,0},1,
{17,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},1},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{80,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаОбъектПоиска",
{1,1,
{"ru","Группа объект поиска"}
},
{1,1,
{"ru","Группа объект поиска"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{12,1,0,0,0,
{0},
{1,0},
{"Pattern"},""},4,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{5,
{103,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияОбъектПоиска",
{1,1,
{"ru","Объект поиска:"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{4,0,0,3,0,
{0}
},1,
{17,
{104,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ДекорацияОбъектПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,2},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{5,
{101,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ДекорацияОбъектПоискаПиктограмма",
{1,1,
{"ru","Объект поиска"}
},
{1,0},1,3,1,0,0,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{2,
{3,0,
{0},"",-1,-1,1,0},0,4,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0}
},1,
{17,
{102,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ДекорацияОбъектПоискаПиктограммаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,2},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ПолеОбъектПоиска",0,0,
{1,1,
{"ru","Объект поиска"}
},
{1,0},
{1,
{4}
},
{0},1,0,2,1,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{26,
{1,0},0,0,2,2,1,2,2,2,2,1,1,2,2,2,
{"U"},
{"U"},"",0,
{3,0,
{0},"",-1,-1,1,0},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{3,1960479b-4d89-4eba-8b39-0aa802020558,"ПолеОбъектПоискаНачалоВыбора",b3b65989-73ac-4db3-b6cb-398cb41a062f,"ПолеОбъектПоискаНачалоВыбораИзСписка",f72043b8-2d79-414e-bc4e-3972fe9dbca1,"ПолеОбъектПоискаОбработкаВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},1,
{3,0,0},0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ПолеОбъектПоискаПриИзменении"},1,
{17,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ПолеОбъектПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{81,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"СброситьНастройкиПоиска",
{1,0},1,
{14,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},1},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ГруппаСтраницы",
{1,0},
{1,1,
{"ru","Группа страницы"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1,
{0}
},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{85,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаНастройкиОтбора",
{1,1,
{"ru","Настройки отбора"}
},
{1,1,
{"ru","Настройки отбора"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{10,
{3,0,
{0},"",-1,-1,1,0},0,0,
{0},
{1,0},1,
{"Pattern"},""},2,143c00f7-a42d-4cd7-9189-88e4467dc768,
{42,
{86,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"КомпоновщикНастроекНастройкиОтбор",0,0,1,
{1,0},
{1,0},
{3,
{18},
{0},
{1}
},1,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,0,2,2,0,1,1,
{0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,1,2,3,
{"#",c04ead79-749a-4981-915e-6fcb144f44e4,0},4,
{"B",0},
{0},
{0},1,
{17,
{87,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КомпоновщикНастроекНастройкиОтборКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{17,
{88,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"КомпоновщикНастроекНастройкиОтборКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{93,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"КомпоновщикНастроекНастройкиОтборОтбор",
{1,1,
{"ru","Настройки расширенные"}
},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{92,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"КомпоновщикНастроекНастройкиОтборНайтиОбъекты",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},1},0,2,2,1,0,
{"Pattern"},"","",2,2},143c00f7-a42d-4cd7-9189-88e4467dc768,
{42,
{89,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"КомпоновщикНастроекНастройкиПараметрыДанных",0,0,1,
{1,0},
{1,0},
{3,
{18},
{0},
{0}
},1,1,0,0,0,1,1,50,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,0,2,2,0,1,1,
{0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1,1,
{"#",f33178f9-6060-48d3-bcd4-3f8682618c3f,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxBdmFp
bGFibGVQYXJhbWV0ZXJVc2VSZXN0cmljdGlvbnMgeG1sbnM9Imh0dHA6Ly92OC4x
Yy5ydS84LjEvZGF0YS1jb21wb3NpdGlvbi1zeXN0ZW0vc2V0dGluZ3MiIHhtbG5z
OnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNp
PSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIvPg==
}
},
{0},
{0},1,
{17,
{90,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КомпоновщикНастроекНастройкиПараметрыДанныхКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{17,
{91,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"КомпоновщикНастроекНастройкиПараметрыДанныхКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},0,2,2,1,0,
{"Pattern"},"","",2,2},1},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаНайденныеОбъекты",
{1,1,
{"ru","Найденные объекты"}
},
{1,1,
{"ru","Группа найденные объекты"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{10,
{3,0,
{0},"",-1,-1,1,0},0,0,
{0},
{1,0},1,
{"Pattern"},""},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{42,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},"НайденныеОбъекты",0,0,1,
{1,0},
{1,0},
{1,
{10}
},0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,1,1,13,
{"U"},
{1,1282f000-23b6-4887-87f4-9e8e79db3d32,"НайденныеОбъектыВыбор"},
{0},1,
{17,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"НайденныеОбъектыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{17,
{48,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"НайденныеОбъектыКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},4,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{61,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},6,"ГруппаКнопки",
{1,1,
{"ru","Группа кнопки"}
},
{1,1,
{"ru","Группа кнопки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,
{0},2},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{56,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"НайденныеОбъектыВыбратьВсе",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{57,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"НайденныеОбъектыОтменитьВыборВсех",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",0},1},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{60,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"НайденныеОбъектыОтбор",
{1,0},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{49,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"НайтиОбъекты",
{1,0},0,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,1,60,
{0},700,0,0,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{75,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"НайденныеОбъектыОткрытьФормуСписка",
{1,0},1,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},1},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{78,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"НайденныеОбъектыГруппаВыбор",
{1,1,
{"ru","Найденные объекты группа выбор"}
},
{1,1,
{"ru","Найденные объекты группа выбор"}
},1,1,0,0,0,0,0,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{2,0,1,0,3,
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},1},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{52,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"НайденныеОбъектыВыбрать",1,0,
{1,1,
{"ru"," "}
},
{1,0},
{2,
{10},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{7,0,
{3,4,
{0}
},
{3,4,
{0}
}
},
{0},1,
{17,
{53,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"НайденныеОбъектыВыбратьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{71,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"НайденныеОбъектыКартинка",0,0,
{1,0},
{1,0},
{2,
{10},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{7,0,0,0,1,
{3,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAAJAAAAAQCAYAAAD59vZgAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAfdEVYdFNvZnR3
YXJlAFBhaW50Lk5FVCA/Pz8/Pz8gMy41LjJ5rpbCAAAFNklEQVRoQ+2Y/U9TVxjH
+SOWqJvZyNxwi8kgOAO4CRWEMWOKe2ki2VyyzaEmC/4AwoTpFqJhcwGpMHkZ6kRR
UhhgIy+B8lKwAwqGUukQWqSlBYRLYVQotAt9ds+ZbXrLve1tG+gaaPL94d57vj3f
PufT5957AgK2Ppu6ArqPOaCNDQH7Imhjg+Fx8PaRTV2YrR/PrgJ6bgSoj0aCLD4c
Q6TiHsDH2ph3KFA5/bb+uxGf9N87LB2oOWS2qTrGrGo4lMYuhm9H+XP+pKTiE0k/
CbLdFulDVffWD+RHER8GCBwV7wAGqZ0Tik6DVPaXkjHXi/nxyvcKIoUWkwYsK2Ng
MamwVo0KmJGnWXpuHSnzLR6uZ/fn/GiB8Gq5+dnH/aILA+SlH0GCpkbQWMUminV+
vDrSO0cJy+okrJp7KVqerwdV+3cL4sKDxMPSOIKEySoR+a8/5XppN2aEP+e3B0A6
rIPKzkFGoevWDx1AutkFUGimGYWuO/rRcVNECAhCdmMhiGpC9+Bhk3oDJQvd/HiF
O3+LI1bNo2BeaqDIqK8Ai6FhjZ49vgYP+FHNG4OH61n8Ob+3HcRb/503Am3wIGhK
gwKx8na+7LQRUTpQW2E08Y9RBsbZUlotkeeRrNfHB36EB3lRM66XdmNG+HN+X3eg
mgQuFAW+SoEFQXUjIpx9B2opiCTMBgk8116k1zh5HunFdbX0DCNAGcW1WaSATumF
VXC2oBK+uVSaxYRW4u9BwmPXg+DTX9+0iXt5F1gV+30gkBLa+/05v7cdxFN/Q2uH
HtVQLteMsnnmcRxD6UAi/n7CNC8Gw2gmgzLI80j/XVf/eZoRoNSrFaCcXoQnUwsw
qJuHAc0sPHo6DT3KKZA80YFYoQFe+hXGV0QETsP8ZaiauQA3dGfg6tiXcGnoI/hh
4Ahk9MRCSnskRKe9TvE7y7+oK4BlYhBMc62U/FNK8QodxI75x2YMMKzSwvDknMf5
O9VlIJ6uoM2/UR3IYFzBDFTJS+D0Hx+AbEKCa8hLEeRY4fDkGQzXsDX/fcI89xCe
K7NYSS1JZgQo+ZdbcFM0AMX1fVBwvxtyqjoh+24rZJU1QWZpHZwtqoXPMvMZAUrI
3QXnxVw413IYUhvjIFkYBacE4XCi/F04fjMYEkv2rAHIWX6TvgOsm2XLkxX49/2t
bSQ3z4JB/2Go2REix/zdQ+M2f1u/Eufvko8w+h3zN46U2fy1shKc/7aowOb3tIN4
8haG4Ikp2gEXBuPg+JVYvAbezo/r18J/jwSojywun5XUknOMAJ28WHL7WHoOONPn
mXzGWxi6PaEO40LUW5iT/Ca9FOw3y9Cxs80yx/zVLd0UPzp25nfMj2Cxnx8d2/vX
owOtWizQoqzGsKBug8CRjrfa4OHdewv2pWxbA5DHHUiUF0GY5mSwOFbOSpqubPIt
jPO/eYh2lt84UY9/E91mmTuP+Ovl97YDMPkROKk9UfDz0wQMjrXzWOGx3sK8nR/X
sDk3TPRsqBLG+wpZSdF8Huryo5vcWYD1HMsmP6Gsp2yWLRCqOXcz2W+2uetF42n9
PF78a7zE++5qLy89G2eg8de1SSYQIAiabzvCIe1RFJY9PNcFQjGTn00W2/zoSxSV
YV/V8TlN6NWclficZnnl/q89KeJ6eFzlV/WWL9FtlrmTxdd+d7LaxsYEcBBEicK3
bfAEkOc8+q7NbLLfLEN1sN8sY1MXX/vZZGQac/Dajr2hKS/14WeeLXg8K2XRzlcM
aLPM3o2gyN2+bc1bGN0MvvZ79qs3xvUv8vEt/l8C6zAAAAAASUVORK5CYII=}
},0},0,0,0,
{1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{3,0,
{0},1,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0}
},
{0},1,
{17,
{72,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"НайденныеОбъектыКартинкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},1},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{50,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"НайденныеОбъектыОбъект",1,0,
{1,0},
{1,0},
{2,
{10},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{26,
{1,0},0,0,0,2,1,2,2,2,2,2,0,2,2,2,
{"U"},
{"U"},"",0,
{3,0,
{0},"",-1,-1,1,0},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},1,
{3,0,0},0},
{0},1,
{17,
{51,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"НайденныеОбъектыОбъектКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},2,2,1,0,
{"Pattern"},"","",0,2},1},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{29,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаОбработки",
{1,1,
{"ru","Обработки"}
},
{1,1,
{"ru","Группа обработки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{10,
{3,0,
{0},"",-1,-1,1,0},0,0,
{0},
{1,0},1,
{"Pattern"},""},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{37,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаНастройкиОбработки",
{1,0},
{1,1,
{"ru","Группа настройки обработки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{12,1,0,0,0,
{0},
{1,0},
{"Pattern"},""},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{44,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаДоступныеОбработки",
{1,1,
{"ru","Доступные обработки"}
},
{1,1,
{"ru","Группа доступные обработки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{12,0,0,2,1,
{0},
{1,0},
{"Pattern"},""},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{42,
{30,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ДоступныеОбработки",0,0,1,
{1,0},
{1,0},
{1,
{8}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,2,0,1,1,
{0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,1,0,
{6,01d80ddd-dce5-4db3-beb5-f63c97cb05b9,"ДоступныеОбработкиПриОкончанииРедактирования",1282f000-23b6-4887-87f4-9e8e79db3d32,"ДоступныеОбработкиВыбор",2391e7b8-7235-45d7-ab7e-6ff3dc086396,"ДоступныеОбработкиПередНачаломДобавления",2ccfdec5-583d-4eca-8319-e55de492665a,"ДоступныеОбработкиПередУдалением",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ДоступныеОбработкиНачалоПеретаскивания",ab930362-ff94-4dcb-ad16-188805d23e3c,"ДоступныеОбработкиПередНачаломИзменения"},
{0},1,
{17,
{31,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ДоступныеОбработкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{17,
{32,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ДоступныеОбработкиКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},4,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{76,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДоступныеОбработкиСохранитьНастройки",
{1,0},1,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{77,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДоступныеОбработкиЗагрузитьНастройки",
{1,0},1,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{94,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДоступныеОбработкиОбновитьСписокОбработок",
{1,0},1,
{15,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{84,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДоступныеОбработкиОчиститьНастройкиОбработок",
{1,0},1,
{13,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},1},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{66,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Группа",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{2,2,1,0,3,
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{67,02023637-7868-4a5f-8576-835a76e0c9ba},1,0,1,
{0,
{0,
{"B",1},0}
},4,"Картинка",0,0,
{1,0},
{1,0},
{2,
{8},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{7,2,1,0,0,
{3,0,
{0},"",-1,-1,1,0},0,0,0,
{1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0}
},
{0},1,
{17,
{68,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КартинкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{69,02023637-7868-4a5f-8576-835a76e0c9ba},1,0,1,
{0,
{0,
{"B",1},0}
},2,"ДоступныеОбработкиОбработка",1,0,
{1,1,
{"ru","Обработка"}
},
{1,0},
{2,
{8},
{1}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{26,
{1,0},0,0,2,2,0,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{3,0,
{0},"",-1,-1,1,0},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},1,
{3,0,0},0},
{0},1,
{17,
{70,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ДоступныеОбработкиОбработкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},1},2,2,1,0,
{"Pattern"},"","",0,2},1},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{97,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"КомандыУправленияСписком",
{1,1,
{"ru","Команды управления списком"}
},
{1,1,
{"ru","Команды управления списком"}
},0,1,0,0,0,2,1,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{12,0,0,3,0,
{0},
{1,0},
{"Pattern"},""},2,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{5,
{99,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ПустаяДекорация",
{1,0},
{1,0},1,0,5,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{4,0,0,3,0,
{0}
},1,
{17,
{100,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ПустаяДекорацияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,2},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{98,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ГруппаОбработкиКнопкиПеренестиВВыбранныеОбработки",
{1,0},1,
{18,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",2},1},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{45,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаВыбранныеОбработки",
{1,1,
{"ru","Выбранные обработки (перетащить из доступных обработок)"}
},
{1,1,
{"ru","Группа выбранные обработки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{12,0,0,2,1,
{0},
{1,0},
{"Pattern"},""},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{42,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},"ВыбранныеОбработки",0,0,1,
{1,0},
{1,0},
{1,
{9}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,1,1,13,
{"U"},
{1,8ad48496-8d0b-4f6c-ae48-99d95227884b,"ВыбранныеОбработкиПеретаскивание"},
{1,b0016a68-ec64-4e6d-b905-c71fd62efc4c},1,
{17,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ВыбранныеОбработкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{17,
{40,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ВыбранныеОбработкиКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{64,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ВыбранныеОбработкиВыбратьВсе",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{65,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ВыбранныеОбработкиОтменитьВыборВсех",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{43,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ВыбранныеОбработкиВыполнитьОбработку",
{1,0},1,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",0},1},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{62,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ВыбранныеОбработкиВыбрать",0,0,
{1,0},
{1,0},
{2,
{9},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{7,0,
{3,4,
{0}
},
{3,4,
{0}
}
},
{0},1,
{17,
{63,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ВыбранныеОбработкиВыбратьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{41,02023637-7868-4a5f-8576-835a76e0c9ba},1,0,1,
{0,
{0,
{"B",1},0}
},2,"ВыбранныеОбработкиОбработкаНастройка",1,0,
{1,0},
{1,0},
{2,
{9},
{1}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{26,
{1,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{3,0,
{0},"",-1,-1,1,0},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},1,
{3,0,0},0},
{0},1,
{17,
{42,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ВыбранныеОбработкиОбработкаНастройкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},2,2,1,0,
{"Pattern"},"","",0,2},1},1},1},1},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{82,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"СтрокаПоиска",1,0,
{1,0},
{1,0},
{1,
{6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{26,
{1,0},0,0,2,2,1,2,2,2,2,1,2,1,2,2,
{"U"},
{"U"},"",0,
{3,0,
{0},"",-1,-1,1,0},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},1,
{3,0,0},0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СтрокаПоискаПриИзменении"},1,
{17,
{83,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"СтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"&НаКлиенте
Перем ОбработкаПеретаскивание;

&НаСервереБезКонтекста
Функция ЭтоПериодическийОбъект(Знач ОбъектПоиска)
	Если ТипЗнч(ОбъектПоиска) <> Тип(""Структура"") Тогда
		Возврат Ложь;
	КонецЕсли; 
	Если ОбъектПоиска.Тип = ""Документ"" ИЛИ ОбъектПоиска.Тип = ""БизнесПроцесс"" Тогда
		Возврат Истина;
	ИначеЕсли ОбъектПоиска.Тип = ""РегистрСведений"" Тогда 
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ОбъектПоиска.ПолноеИмя);
		Если ОбъектМетаданных.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический Тогда
			Возврат Истина;
		КонецЕсли; 
	Иначе
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ОбъектПоиска.ПолноеИмя);
		Если ОбъектМетаданных.Реквизиты.Найти(""Дата"") <> Неопределено Тогда
			Если ОбъектМетаданных.Реквизиты.Дата.Тип.Типы().Количество() = 1
				И ОбъектМетаданных.Реквизиты.Дата.Тип.Типы()[0] = Тип(""Дата"") Тогда
				Возврат Истина;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли;
	Возврат Ложь
КонецФункции // ()

&НаСервере
Функция СформироватьСтруктуруПараметров()
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""Настройка"",  Неопределено);
	СтруктураПараметров.Вставить(""Настройки"",  Новый Массив);
	СтруктураПараметров.Вставить(""ОбъектПоиска"",  ОбъектПоиска);
	СтруктураПараметров.Вставить(""ОбрабатыватьВТранзакции"", ОбрабатыватьВТранзакции);
	СтруктураПараметров.Вставить(""КоличествоОбъектовНаТранзакцию"", КоличествоОбъектовНаТранзакцию);
	СтруктураПараметров.Вставить(""РежимРаботы"", РежимРаботы);
	Если ОбъектПоиска.Тип = ""ПланОбмена"" ИЛИ ОбъектПоиска.Тип = ""РегистрСведений"" Тогда
		СтруктураПараметров.Вставить(""ИспользоватьРежимЗагрузкиОбменаДанными"", Ложь);
	Иначе
		СтруктураПараметров.Вставить(""ИспользоватьРежимЗагрузкиОбменаДанными"", ИспользоватьРежимЗагрузкиОбменаДанными);
	КонецЕсли; 
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить(""Выбрать"", Истина);
	Если ОбъектПоиска.Тип = ""РегистрСведений"" Тогда
		ТаблицаОбъектов = НайденныеОбъекты.Выгрузить(СтруктураОтбора);
		СтруктураПараметров.Вставить(""АдресТаблицы"", ПоместитьВоВременноеХранилище(ТаблицаОбъектов, ЭтаФорма.УникальныйИдентификатор));
	Иначе
		ТаблицаОбъектов = НайденныеОбъекты.Выгрузить(СтруктураОтбора, ""Объект"");
		СтруктураПараметров.Вставить(""НайденныеОбъекты"", ТаблицаОбъектов.ВыгрузитьКолонку(""Объект""));
	КонецЕсли; 
	
	Возврат СтруктураПараметров;
КонецФункции

&НаКлиенте
Функция ПроверитьДоступностьОбработки()
	ИндексСтроки = Элементы.ДоступныеОбработки.ТекущаяСтрока;
	ТекущаяСтрока = ДоступныеОбработки.НайтиПоИдентификатору(ИндексСтроки);
	
	Родитель = ТекущаяСтрока.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
		Возврат ОбработкаДоступна(ОбъектПоиска.Тип, ТекущаяСтрока.ИмяФормы);
	КонецЕсли;
	
	Возврат ОбработкаДоступна(ОбъектПоиска.Тип, Родитель.ИмяФормы);
КонецФункции

&НаСервере
Процедура СоздатьКолонки(ТаблицаРезультата, МассивРеквизитовПоУмолчанию = Неопределено) Экспорт
	
	ТаблицаЭлемент = Элементы.НайденныеОбъекты;
	
	//очистка
	Для Каждого ДобавленныйЭлемент Из ДобавленныеЭлементы Цикл
		Элементы.Удалить(Элементы[ДобавленныйЭлемент.Значение]);
	КонецЦикла;
	ДобавленныеЭлементы.Очистить();
	
	РеквизитыОбъекта = Метаданные.НайтиПоПолномуИмени(ОбъектПоиска.ПолноеИмя).Реквизиты;
		
	//добавляем реквизиты
	МассивРеквизитов = Новый Массив;
	Для Каждого Колонка Из ТаблицаРезультата.Колонки Цикл
		Если МассивРеквизитовПоУмолчанию <> Неопределено 
			И МассивРеквизитовПоУмолчанию.Найти(Колонка.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТипКолонки = Колонка.ТипЗначения;
		Если Колонка.Имя = ""Представление"" ИЛИ ТипКолонки = Тип(""ХранилищеЗначения"") Тогда
			Продолжить;
		КонецЕсли;
		//СистемныеПоля
		Если Колонка.Имя = ""СистемныеПоляНомерПоПорядку""  Тогда
			ЗаголовокПоля = ""№ п/п"";
		Иначе
			Реквизит = РеквизитыОбъекта.Найти(Колонка.Имя);
			Если Реквизит <> Неопределено Тогда
				//ЗаголовокПоля = ?(ЗначениеЗаполнено(Реквизит.Синоним), Реквизит.Синоним + "" ("" + Реквизит.Имя + "")"", Реквизит.Имя);
				ЗаголовокПоля = ?(ЗначениеЗаполнено(Реквизит.Синоним), Реквизит.Синоним, Реквизит.Имя);
			Иначе                  
				ЗаголовокПоля = Колонка.Имя;
			КонецЕсли;  //  
		КонецЕсли; 
		
		РеквизитФормы = Новый РеквизитФормы(Колонка.Имя, ТипКолонки, ТаблицаЭлемент.Имя, ЗаголовокПоля);
		МассивРеквизитов.Добавить(РеквизитФормы);
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивРеквизитов, ДобавленныеРеквизиты.ВыгрузитьЗначения());
	ДобавленныеРеквизиты.Очистить();
	
	//добавляем элементы управления
	Для Каждого Реквизит Из МассивРеквизитов Цикл
		Попытка
			ДобавленныеРеквизиты.Добавить(Реквизит.Путь + ""."" + Реквизит.Имя);
			
			Элемент = Элементы.Добавить(ТаблицаЭлемент.Имя + Реквизит.Имя, Тип(""ПолеФормы""), ТаблицаЭлемент);
			Элемент.Вид = ВидПоляФормы.ПолеВвода;
			Элемент.ПутьКДанным = ТаблицаЭлемент.Имя + ""."" + Реквизит.Имя;
			Элемент.ТолькоПросмотр = Истина;
			Элемент.РастягиватьПоГоризонтали = Ложь;
			Если Реквизит.Имя = ""СистемныеПоляНомерПоПорядку"" Тогда
				Элемент.ФиксацияВТаблице = ФиксацияВТаблице.Лево;
				Элемент.Ширина = 3;
			КонецЕсли; 
			
			ДобавленныеЭлементы.Добавить(Элемент.Имя);
		Исключение
		КонецПопытки; 
	КонецЦикла;
	
	//заполнение данными
	НайденныеОбъекты.Очистить();
	Для Каждого СтрокаТаблицы ИЗ ТаблицаРезультата Цикл
		НоваяСтрока = НайденныеОбъекты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает полный путь к форме внешней обработки, отчета или любого объекта метаданных в виде
// ВнешняяОбработка.ИмяВнешнейОбработки.Форма.ИмяФормы
// ВнешнийОтчет.ИмяВнешнегоОтчета.Форма.ИмяФормы
// Документ.ИмяОбъекта.Форма.ИмяФормы
//
// Параметры
//  ИмяФормы  - <Строка> - имя формы объекта
//
// Возвращаемое значение:
//   <Строка>   - полный путь к форме
//
&НаКлиенте
Функция ПолучитьПолноеИмяФормы(ИмяФормы)
	
	СимволТочка = ""."";
	ПозицияТочки = СтрДлина(ЭтаФорма.ИмяФормы);
	Пока Сред(ЭтаФорма.ИмяФормы, ПозицияТочки, 1) <> СимволТочка Цикл ПозицияТочки = ПозицияТочки - 1; КонецЦикла; // 
	Возврат Лев(ЭтаФорма.ИмяФормы, ПозицияТочки) + ИмяФормы;
	
КонецФункции

&НаСервере
Процедура СохранитьОбъектПоиска(ПолучитьНастройки = Истина)
	
	Если ПолучитьНастройки Тогда
		ОтборДанных = КомпоновщикНастроек.ПолучитьНастройки();
	КонецЕсли; 
	
	Если ТипЗнч(ОбъектПоиска) <> Тип(""Структура"") Тогда
		ОбъектПоиска = ЗаполнитьСтруктуруОбъектаПоиска();
	ИначеЕсли ЗначениеЗаполнено(ОбъектПоиска.Тип) Тогда 
		ОбъектыПоиска.Вставить(ОбъектПоиска.Тип + ОбъектПоиска.Имя, ОтборДанных);
		ОбъектыПоиска.Вставить(ОбъектПоиска.Тип + ОбъектПоиска.Имя + ""СтрокаПоиска"", СтрокаПоиска);
	КонецЕсли; 
	
КонецПроцедуры	

&НаСервере
Процедура ОбработатьРезультатОтбора(РезультатОтбора)
	
	ОтборДанных = РезультатОтбора.Настройки;
	СтрокаПоиска = РезультатОтбора.СтрокаПоиска;
	Элементы.СтрокаПоиска.СписокВыбора.ЗагрузитьЗначения(РезультатОтбора.СтрокаПоискаСписок);
	ПараметрыЗапроса.Загрузить(РезультатОтбора.ПараметрыЗапроса.Выгрузить());
	
	ТекстЗапроса = РезультатОтбора.ТекстЗапроса;
	ТекстПроизвольногоЗапроса = РезультатОтбора.ТекстПроизвольногоЗапроса;
	РежимОтбора = РезультатОтбора.РежимОтбора;
	ОбъектПоиска.РежимОтбора = РежимОтбора;
	
	СохранитьОбъектПоиска(Ложь);
	
	ЗаполнитьНастройки(КомпоновщикНастроек, ОтборДанных);
	
КонецПроцедуры

&НаКлиенте
Функция ДобавитьСтроку(ТекСтрока)
	НоваяСтрока = ТекСтрока.ПолучитьЭлементы().Добавить();
	НоваяСтрока.Обработка = ТекСтрока.Обработка;
	
	Настройка = Новый Структура;
	Настройка.Вставить(""Обработка"", ТекСтрока.Обработка);
	Настройка.Вставить(""Прочее"", Неопределено);
	
	НоваяСтрока.Настройка.Добавить(Настройка);
	
	Элементы.ДоступныеОбработки.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Элементы.ДоступныеОбработки.ИзменитьСтроку();
	
	Возврат НоваяСтрока;
КонецФункции

&НаКлиенте
Функция ПолучитьНастройкуПоУмолчанию()
	
	Перем Настройка;
	Настройка = Новый Структура;
	Настройка.Вставить(""Обработка"", ""Новая настройка"");
	Настройка.Вставить(""Прочее"", Новый Структура);
	Настройка.Прочее.Вставить(""РежимРаботы"", РежимРаботы);
	Если ОбъектПоиска.Тип = ""ПланОбмена"" ИЛИ ОбъектПоиска.Тип = ""РегистрСведений"" Тогда
		Настройка.Прочее.Вставить(""ИспользоватьРежимЗагрузкиОбменаДанными"", Ложь);
	Иначе
		Настройка.Прочее.Вставить(""ИспользоватьРежимЗагрузкиОбменаДанными"", ИспользоватьРежимЗагрузкиОбменаДанными);
	КонецЕсли; 
	
	Возврат Настройка;
	
КонецФункции

&НаКлиенте
Функция СформироватьНастройки(ТекСтрока)
	
	МассивНастроек = Новый Массив;
	Для Каждого Стр Из ТекСтрока.ПолучитьЭлементы() Цикл
		Если Стр.Настройка[0].Значение = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивНастроек.Добавить(Стр.Настройка[0].Значение);
	КонецЦикла;
	
	Если МассивНастроек.Количество() = 0 Тогда
		МассивНастроек.Добавить(ПолучитьНастройкуПоУмолчанию());
	КонецЕсли; 
	
	Возврат МассивНастроек;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьОбработки(ИмяТаблицы, Выбор)
	Таблица = ЭтаФорма[ИмяТаблицы];
	Для Каждого Стр Из Таблица Цикл
		Стр.Выбрать = Выбор;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ОбработкаДоступна(ПроверяемыйТипОбъекта = """", ИмяОбработки)

	Если ПустаяСтрока(ПроверяемыйТипОбъекта) Тогда
		Возврат Ложь;
	КонецЕсли;

	Попытка
		ТипыОбрабатываемыхОбъектов = ПолучитьФорму(ПолучитьПолноеИмяФормы(ИмяОбработки)).мТипыОбрабатываемыхОбъектов;
	Исключение
		Предупреждение(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;

	Если ТипыОбрабатываемыхОбъектов = Неопределено Тогда
    	Возврат Истина;
	Иначе
		Если Найти(ТипыОбрабатываемыхОбъектов, ПроверяемыйТипОбъекта) Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура УстановитьКартинкиОбработок()
	Для Каждого Стр Из ДоступныеОбработки.ПолучитьЭлементы() Цикл
		Стр.Картинка = БиблиотекаКартинок.Обработка;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЭлементы(Выбор)
	Для Каждого Стр Из НайденныеОбъекты Цикл
		Стр.Выбрать = Выбор;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОбъектаПоиска(ВосстанавливатьНастройки = Истина)
	
	Если ОбъектПоиска = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОбъектПоиска.Свойство(""РежимОтбора"") Тогда
		ОбъектПоиска.Вставить(""РежимОтбора"", 0);
	КонецЕсли; 
	УстановитьВидимостьДоступность();
	
	ТекстЗапроса = ПолучитьТекстЗапроса(ИменаПолейТЧ, ОбъектПоиска);
	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат;
	КонецЕсли; 
	ТекстПроизвольногоЗапроса = ТекстЗапроса + Символы.ПС + ""АВТОУПОРЯДОЧИВАНИЕ"";
	
	Если ОбъектПоиска.Тип = ""Документ"" ИЛИ ОбъектПоиска.Тип = ""БизнесПроцесс"" 
		ИЛИ (ОбъектПоиска.Тип <> ""РегистрСведений"" И ЭтоПериодическийОбъект(ОбъектПоиска)) Тогда
		ТекстЗапроса = ТекстЗапроса + ""
				|{ГДЕ ТаблицаСсылок.Дата >= &НачДата}
				|{ГДЕ ТаблицаСсылок.Дата <= &КонДата}"";
	ИначеЕсли ОбъектПоиска.Тип = ""РегистрСведений"" Тогда 
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ОбъектПоиска.ПолноеИмя);
		Если ОбъектМетаданных.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический Тогда
			ТекстЗапроса = ТекстЗапроса + ""
					|{ГДЕ ТаблицаСсылок.Период >= &НачДата}
					|{ГДЕ ТаблицаСсылок.Период <= &КонДата}"";
		КонецЕсли; 
	КонецЕсли;
			
	Если ВосстанавливатьНастройки И ОбъектыПоиска.Свойство(ОбъектПоиска.Тип + ОбъектПоиска.Имя) Тогда
		ОтборДанных = ОбъектыПоиска[ОбъектПоиска.Тип + ОбъектПоиска.Имя];
		Если ОбъектыПоиска.Свойство(ОбъектПоиска.Тип + ОбъектПоиска.Имя + ""СтрокаПоиска"") Тогда
			СтрокаПоиска = ОбъектыПоиска[ОбъектПоиска.Тип + ОбъектПоиска.Имя + ""СтрокаПоиска""];
		КонецЕсли; 
	Иначе
		ОтборДанных = Неопределено;
	КонецЕсли; 
	ПараметрыЗапроса.Очистить();
	
	ЗаполнитьНастройки(КомпоновщикНастроек, ОтборДанных);
	
	Элементы.ДекорацияОбъектПоискаПиктограмма.Картинка = БиблиотекаКартинок[ОбъектПоиска.Тип];
	Элементы.ДекорацияОбъектПоискаПиктограмма.Подсказка = ОбъектПоиска.Тип;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьУсловиеПоискаПоСтроке(СтрокаПоиска, ОбъектПоиска)
	УсловиеПоискаПоСтроке = """";

	ИскомыйОбъект = ОбъектПоиска;
	
	Если ИскомыйОбъект.Тип <> ""РегистрСведений"" И СтрокаПоиска <> """" Тогда
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ИскомыйОбъект.ПолноеИмя);
		
		УсловиеПоискаПоСтроке = """";

		СтрокаДляПоиска = СтрЗаменить(СтрокаПоиска, """""""", """""""""""");

		Если ИскомыйОбъект.Тип = ""Справочник"" Тогда
			Если ОбъектМетаданных.ДлинаНаименования <> 0 Тогда
				Если УсловиеПоискаПоСтроке <> """" Тогда
					УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" ИЛИ "";
				КонецЕсли;
				УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" Наименование ПОДОБНО """"%""
									  + СтрокаДляПоиска + ""%"""""";
			КонецЕсли;

			Если ОбъектМетаданных.ДлинаКода <> 0 И ОбъектМетаданных.ТипКода = 
				Метаданные.СвойстваОбъектов.ТипКодаСправочника.Строка Тогда
				Если УсловиеПоискаПоСтроке <> """" Тогда
					УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" ИЛИ "";
				КонецЕсли;
				УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" Код ПОДОБНО """"%""
									  + СтрокаДляПоиска + ""%"""""";
			КонецЕсли;
		ИначеЕсли ИскомыйОбъект.Тип = ""ПланВидовХарактеристик"" ИЛИ ИскомыйОбъект.Тип = ""ПланВидовРасчета"" ИЛИ ИскомыйОбъект.Тип = ""ПланОбмена"" Тогда
			Если ОбъектМетаданных.ДлинаНаименования <> 0 Тогда
				Если УсловиеПоискаПоСтроке <> """" Тогда
					УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" ИЛИ "";
				КонецЕсли;
				УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" Наименование ПОДОБНО """"%""
									  + СтрокаДляПоиска + ""%"""""";
			КонецЕсли;

			Если ОбъектМетаданных.ДлинаКода <> 0 Тогда
				Если УсловиеПоискаПоСтроке <> """" Тогда
					УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" ИЛИ "";
				КонецЕсли;
				УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" Код ПОДОБНО """"%""
									  + СтрокаДляПоиска + ""%"""""";
			КонецЕсли;
		ИначеЕсли ИскомыйОбъект.Тип = ""Документ"" ИЛИ ИскомыйОбъект.Тип = ""БизнесПроцесс"" ИЛИ ИскомыйОбъект.Тип = ""Задача"" Тогда
			Если ОбъектМетаданных.ТипНомера = Метаданные.СвойстваОбъектов.ТипНомераДокумента.Строка И ОбъектМетаданных.ДлинаНомера <> 0 Тогда
				Если УсловиеПоискаПоСтроке <> """" Тогда
					УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" ИЛИ "";
				КонецЕсли;
				УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" Номер ПОДОБНО """"%""
									  + СтрокаДляПоиска + ""%"""""";
			КонецЕсли;
			Если ОбъектМетаданных.ТипНомера = Метаданные.СвойстваОбъектов.ТипНомераБизнесПроцесса.Строка И ОбъектМетаданных.ДлинаНомера <> 0 Тогда
				Если УсловиеПоискаПоСтроке <> """" Тогда
					УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" ИЛИ "";
				КонецЕсли;
				УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" Номер ПОДОБНО """"%""
									  + СтрокаДляПоиска + ""%"""""";
			КонецЕсли;
			Если ОбъектМетаданных.ТипНомера = Метаданные.СвойстваОбъектов.ТипНомераЗадачи.Строка И ОбъектМетаданных.ДлинаНомера <> 0 Тогда
				Если УсловиеПоискаПоСтроке <> """" Тогда
					УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" ИЛИ "";
				КонецЕсли;
				УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" Номер ПОДОБНО """"%""
									  + СтрокаДляПоиска + ""%"""""";
			КонецЕсли;
			Если ИскомыйОбъект.Тип = ""Задача"" И ОбъектМетаданных.ДлинаНаименования <> 0 Тогда
				Если УсловиеПоискаПоСтроке <> """" Тогда
					УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" ИЛИ "";
				КонецЕсли;
				УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" Наименование ПОДОБНО """"%""
				                      + СтрокаДляПоиска + ""%"""""";
			КонецЕсли;
		КонецЕсли;

		Для Каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
			Если Реквизит.Тип.Типы().Количество() = 1 И Реквизит.Тип.СодержитТип(Тип(""Строка"")) 
				И Реквизит.Тип.КвалификаторыСтроки.Длина <> 0 Тогда
				Если УсловиеПоискаПоСтроке <> """" Тогда
					УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" ИЛИ "";
				КонецЕсли;
				УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + Реквизит.Имя + "" ПОДОБНО """"%""
									  + СтрокаДляПоиска + ""%"""""";
			КонецЕсли;
		КонецЦикла;
		
		Для каждого ТЧ Из ОбъектМетаданных.ТабличныеЧасти Цикл
			Для каждого Реквизит Из ТЧ.Реквизиты Цикл
				Если Реквизит.Тип.Типы().Количество() = 1 И Реквизит.Тип.СодержитТип(Тип(""Строка"")) 
					И Реквизит.Тип.КвалификаторыСтроки.Длина <> 0 Тогда
					Если УсловиеПоискаПоСтроке <> """" Тогда
						УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + "" ИЛИ "";
					КонецЕсли;
					УсловиеПоискаПоСтроке = УсловиеПоискаПоСтроке + ТЧ.Имя + ""."" + Реквизит.Имя + "" ПОДОБНО """"%""
										  + СтрокаДляПоиска + ""%"""""";
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла;
		
	КонецЕсли;

	Возврат УсловиеПоискаПоСтроке;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапроса(ИменаПолейТЧ, ОбъектПоиска)
    	
	ИскомыйОбъект = ОбъектПоиска;
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ИскомыйОбъект.ПолноеИмя);
	Если ОбъектМетаданных = Неопределено Тогда
		Возврат """";
	КонецЕсли; 
	Условие = """";

	Если ИскомыйОбъект.Тип <> ""РегистрСведений"" Тогда
		ТекстЗапроса = ""ВЫБРАТЬ 
		|	Ссылка КАК Объект, 
		|	//НомерСтроки 
		|	Представление"";
	Иначе
		ТекстЗапроса = ""ВЫБРАТЬ 
		|	""""Запись"""" КАК Объект,
		|	0 КАК Картинка
		|	//Отображаемые поля
		|"";
		Если ОбъектМетаданных.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический Тогда
			ТекстЗапроса = ТекстЗапроса + "", 
			|	Период"";
		КонецЕсли; 
	КонецЕсли; 
	
	Если ИскомыйОбъект.Тип = ""Справочник"" Тогда
		Если ОбъектМетаданных.ДлинаНаименования <> 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "", 
			|	Ссылка.Наименование КАК Наименование"";
		КонецЕсли;
		Если ОбъектМетаданных.ОсновноеПредставление <> Метаданные.СвойстваОбъектов.ОсновноеПредставлениеСправочника.ВВидеНаименования Тогда
			Если ОбъектМетаданных.ДлинаКода <> 0 Тогда
				Условие = ""Код"";
			КонецЕсли;
		КонецЕсли;
		Если ОбъектМетаданных.ДлинаКода <> 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "",
			|	Ссылка.Код КАК Код"";
		КонецЕсли;
		Если ОбъектМетаданных.ОсновноеПредставление <> Метаданные.СвойстваОбъектов.ОсновноеПредставлениеСправочника.ВВидеКода Тогда
			Если ОбъектМетаданных.ДлинаНаименования <> 0 Тогда
				Условие = ""Наименование"";
			КонецЕсли;
		КонецЕсли;
		Если ОбъектМетаданных.Иерархический Тогда
				ТекстЗапроса = ТекстЗапроса + "",
				|	Ссылка.Родитель КАК Родитель"";
				Условие = Условие + "", "" + Символы.ПС + ""Родитель.*"";
		КонецЕсли;
		Если ОбъектМетаданных.Владельцы.Количество() > 0 Тогда
				ТекстЗапроса = ТекстЗапроса + "",
				|	Ссылка.Владелец КАК Владелец"";
				Условие = Условие + "", "" + Символы.ПС + ""Владелец.*"";
		КонецЕсли;
	ИначеЕсли ИскомыйОбъект.Тип =  ""ПланВидовХарактеристик""  Тогда
		Если ОбъектМетаданных.ДлинаНаименования <> 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "", 
			|	Ссылка.Наименование КАК Наименование"";
		КонецЕсли;
		Если ОбъектМетаданных.ОсновноеПредставление <> Метаданные.СвойстваОбъектов.ОсновноеПредставлениеВидаХарактеристики.ВВидеНаименования Тогда
			Если ОбъектМетаданных.ДлинаКода <> 0 Тогда
				Условие = ""Код"";
			КонецЕсли;
		КонецЕсли;
		Если ОбъектМетаданных.ДлинаКода <> 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "",
			|	Ссылка.Код КАК Код"";
		КонецЕсли;
		Если ОбъектМетаданных.ОсновноеПредставление <> Метаданные.СвойстваОбъектов.ОсновноеПредставлениеВидаХарактеристики.ВВидеКода Тогда
			Если ОбъектМетаданных.ДлинаНаименования <> 0 Тогда
				Условие = ""Наименование"";
			КонецЕсли;
		КонецЕсли;
		Если ОбъектМетаданных.Иерархический Тогда
				ТекстЗапроса = ТекстЗапроса + "",
				|	Ссылка.Родитель КАК Родитель"";
		КонецЕсли;
	ИначеЕсли ИскомыйОбъект.Тип =  ""ПланВидовРасчета""  Тогда
		Если ОбъектМетаданных.ДлинаНаименования <> 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "", 
			|	Ссылка.Наименование КАК Наименование"";
		КонецЕсли;
		Если ОбъектМетаданных.ОсновноеПредставление <> Метаданные.СвойстваОбъектов.ОсновноеПредставлениеВидаРасчета.ВВидеНаименования Тогда
			Если ОбъектМетаданных.ДлинаКода <> 0 Тогда
				Условие = ""Код"";
			КонецЕсли;
		КонецЕсли;
		Если ОбъектМетаданных.ДлинаКода <> 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "",
			|	Ссылка.Код КАК Код"";
		КонецЕсли;
		Если ОбъектМетаданных.ОсновноеПредставление <> Метаданные.СвойстваОбъектов.ОсновноеПредставлениеВидаРасчета.ВВидеКода Тогда
			Если ОбъектМетаданных.ДлинаНаименования <> 0 Тогда
				Условие = ""Наименование"";
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИскомыйОбъект.Тип =  ""ПланОбмена""  Тогда
		Если ОбъектМетаданных.ДлинаНаименования <> 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "", 
			|	Ссылка.Наименование КАК Наименование"";
		КонецЕсли;
		Если ОбъектМетаданных.ОсновноеПредставление <> Метаданные.СвойстваОбъектов.ОсновноеПредставлениеПланаОбмена.ВВидеНаименования Тогда
			Если ОбъектМетаданных.ДлинаКода <> 0 Тогда
				Условие = ""Код"";
			КонецЕсли;
		КонецЕсли;
		Если ОбъектМетаданных.ДлинаКода <> 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "",
			|	Ссылка.Код КАК Код"";
		КонецЕсли;
		Если ОбъектМетаданных.ОсновноеПредставление <> Метаданные.СвойстваОбъектов.ОсновноеПредставлениеПланаОбмена.ВВидеКода Тогда
			Если ОбъектМетаданных.ДлинаНаименования <> 0 Тогда
				Условие = ""Наименование"";
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИскомыйОбъект.Тип = ""Документ"" ИЛИ ИскомыйОбъект.Тип = ""БизнесПроцесс"" Тогда
		Если ОбъектМетаданных.ДлинаНомера <> 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "", 
			|	Ссылка.Дата КАК Дата,
			|	Ссылка.Номер КАК Номер"";
			Условие = ""Номер"";
		Иначе                  
			ТекстЗапроса = ТекстЗапроса + "", 
			|	Ссылка.Дата КАК Дата"";
		КонецЕсли;  //  
	ИначеЕсли ИскомыйОбъект.Тип = ""Задача"" Тогда
		Если ОбъектМетаданных.ДлинаНомера <> 0 Тогда
			ТекстЗапроса = ТекстЗапроса + "", 
			|	Ссылка.Наименование КАК Наименование,
			|	Ссылка.Номер КАК Номер"";
			Условие = ""Номер, Наименование"";
		Иначе                  
			ТекстЗапроса = ТекстЗапроса + "", 
			|	Ссылка.Наименование КАК Наименование"";
			Условие = ""Наименование"";
		КонецЕсли;  //  
	КонецЕсли;
		
	Если ИскомыйОбъект.Тип = ""Справочник"" ИЛИ ИскомыйОбъект.Тип = ""ПланВидовХарактеристик"" Тогда
		Если ОбъектМетаданных.Иерархический И ОбъектМетаданных.ВидИерархии = Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияГруппИЭлементов Тогда
			ТекстЗапроса = ТекстЗапроса + "", 
			|	ВЫБОР КОГДА Ссылка.ЭтоГруппа ТОГДА 
			|		ВЫБОР КОГДА Ссылка.ПометкаУдаления ТОГДА 3 ИНАЧЕ 0 КОНЕЦ 
			|	ИНАЧЕ 
			|		ВЫБОР КОГДА Ссылка.ПометкаУдаления ТОГДА 4 ИНАЧЕ 1 КОНЕЦ 
			|	КОНЕЦ КАК Картинка"";
		Иначе
			ТекстЗапроса = ТекстЗапроса + "", 
			|	ВЫБОР КОГДА Ссылка.ПометкаУдаления ТОГДА 4 ИНАЧЕ 1 КОНЕЦ КАК Картинка"";
		КонецЕсли;
	ИначеЕсли ИскомыйОбъект.Тип = ""ПланВидовРасчета"" ИЛИ ИскомыйОбъект.Тип = ""ПланОбмена"" Тогда
		ТекстЗапроса = ТекстЗапроса + "", 
		|	ВЫБОР КОГДА Ссылка.ПометкаУдаления ТОГДА 4 ИНАЧЕ 1 КОНЕЦ  КАК Картинка"";
	ИначеЕсли ИскомыйОбъект.Тип = ""Документ"" Тогда
		ТекстЗапроса = ТекстЗапроса + "", 
		|	ВЫБОР КОГДА Ссылка.Проведен ТОГДА 
		|		7 
		|	ИНАЧЕ 
		|		ВЫБОР КОГДА Ссылка.ПометкаУдаления ТОГДА 8 ИНАЧЕ 6 КОНЕЦ 
		|	КОНЕЦ КАК Картинка"";
	ИначеЕсли ИскомыйОбъект.Тип <> ""РегистрСведений"" Тогда
		ТекстЗапроса = ТекстЗапроса + "", 
		|	ВЫБОР КОГДА Ссылка.ПометкаУдаления ТОГДА 8 ИНАЧЕ 6 КОНЕЦ  КАК Картинка"";
	КонецЕсли;
		
	ТипХранилище = Тип(""ХранилищеЗначения"");
	Если ИскомыйОбъект.Тип <> ""РегистрСведений"" Тогда
		Для Каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
			Если НЕ Реквизит.Тип.СодержитТип(ТипХранилище) Тогда
				ТекстЗапроса = ТекстЗапроса + "",
				|	"" + Реквизит.Имя;
			КонецЕсли; 
		КонецЦикла; 

		ИменаПолейТЧ.Очистить();
		Если ОбъектМетаданных.ТабличныеЧасти.Количество() > 0 Тогда
			
			ТипЧисло = Тип(""Число"");
			АгрегатныеФункции = Новый Массив;
			АгрегатныеФункции.Добавить(""Сумма"");
			АгрегатныеФункции.Добавить(""Минимум"");
			АгрегатныеФункции.Добавить(""Максимум"");
			АгрегатныеФункции.Добавить(""Среднее"");
			
			Для каждого ТабличнаяЧасть Из ОбъектМетаданных.ТабличныеЧасти Цикл
				
				ИмяПоля = ТабличнаяЧасть.Имя + ""КоличествоСтрок"";
				ТекстЗапроса = ТекстЗапроса + "",
				|	ЕСТЬNULL(ТЧ"" + ТабличнаяЧасть.Имя + "".КоличествоСтрок, 0) КАК "" + ИмяПоля;
				ИменаПолейТЧ.Добавить(Новый ПолеКомпоновкиДанных(ИмяПоля));
				
				Для каждого Реквизит Из ТабличнаяЧасть.Реквизиты Цикл    
					Если Реквизит.Тип.Типы().Количество() = 1 И Реквизит.Тип.СодержитТип(ТипЧисло) Тогда
						Для каждого ЭлементМассива Из АгрегатныеФункции Цикл
							ИмяПоля = ТабличнаяЧасть.Имя + Реквизит.Имя + ЭлементМассива;
							ТекстЗапроса = ТекстЗапроса + "",
							|	ЕСТЬNULL(ТЧ"" + ТабличнаяЧасть.Имя + "".""+ Реквизит.Имя + ЭлементМассива + "", 0) КАК "" + ИмяПоля;
							ИменаПолейТЧ.Добавить(Новый ПолеКомпоновкиДанных(ИмяПоля));
						КонецЦикла; //Для каждого ЭлементМассива Из  
					КонецЕсли; 
				КонецЦикла; //Для каждого РеквизитТЧ Из   
				
			КонецЦикла;
			
		КонецЕсли; 

		ТекстЗапроса = ТекстЗапроса + Символы.ПС + ""ИЗ"" + Символы.ПС;
		ТекстЗапроса = ТекстЗапроса + ""	"" + ИскомыйОбъект.ПолноеИмя + "" КАК ТаблицаСсылок"" + Символы.ПС;
		
		Если ОбъектМетаданных.ТабличныеЧасти.Количество() > 0 Тогда
			ШаблонСтрокиДляСоединенияТЧ = ""
				|ЛЕВОЕ СОЕДИНЕНИЕ 
				|	(ВЫБРАТЬ
				|		ОбъектТЧ.Ссылка КАК %ТЧ%Ссылка,
				|		КОЛИЧЕСТВО(ОбъектТЧ.НомерСтроки) КАК КоличествоСтрок //АгрегатныеПоля
				|	ИЗ
				|		%Тип%.%Имя%.%ТЧ% КАК ОбъектТЧ
				|	
				|	СГРУППИРОВАТЬ ПО
				|		ОбъектТЧ.Ссылка
				|	) КАК ТЧ%ТЧ%
				|	ПО (ТЧ%ТЧ%.%ТЧ%Ссылка = ТаблицаСсылок.Ссылка)	
				|"";
			
			Для каждого ТабличнаяЧасть Из ОбъектМетаданных.ТабличныеЧасти Цикл
				ТекстЗапроса = ТекстЗапроса + ШаблонСтрокиДляСоединенияТЧ;
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ""%ТЧ%"", ТабличнаяЧасть.Имя);
				
				СтрокаДляАгрегатныхПолей = """";
				Для каждого Реквизит Из ТабличнаяЧасть.Реквизиты Цикл    
					Если Реквизит.Тип.Типы().Количество() = 1 И Реквизит.Тип.СодержитТип(ТипЧисло) Тогда
						Для каждого ЭлементМассива Из АгрегатныеФункции Цикл
							СтрокаДляАгрегатныхПолей = СтрокаДляАгрегатныхПолей + "",
							|		"" + ВРег(ЭлементМассива) + ""(ОбъектТЧ."" + Реквизит.Имя + "") КАК "" + Реквизит.Имя + ЭлементМассива;
						КонецЦикла;
					КонецЕсли; 
				КонецЦикла; //Для каждого РеквизитТЧ Из   
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ""//АгрегатныеПоля"", СтрокаДляАгрегатныхПолей);
			КонецЦикла;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ""//АгрегатныеПоля"", """");
		КонецЕсли; 
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ""%Тип%"", ИскомыйОбъект.Тип);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ""%Имя%"", ОбъектМетаданных.Имя);
		
	Иначе
		Для Каждого Реквизит Из ОбъектМетаданных.Измерения Цикл
			Если НЕ Реквизит.Тип.СодержитТип(ТипХранилище) Тогда
				ТекстЗапроса = ТекстЗапроса + "",
				|	"" + Реквизит.Имя;
			КонецЕсли; 
		КонецЦикла; 
		Для Каждого Реквизит Из ОбъектМетаданных.Ресурсы Цикл
			Если НЕ Реквизит.Тип.СодержитТип(ТипХранилище) Тогда
				ТекстЗапроса = ТекстЗапроса + "",
				|	"" + Реквизит.Имя;
			КонецЕсли; 
		КонецЦикла; 
		Для Каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
			Если НЕ Реквизит.Тип.СодержитТип(ТипХранилище) Тогда
				ТекстЗапроса = ТекстЗапроса + "",
				|	"" + Реквизит.Имя;
			КонецЕсли; 
		КонецЦикла; 
		ТекстЗапроса = ТекстЗапроса + ""
			|	//Отображаемые поля
			|ИЗ"" + Символы.ПС;
		ТекстЗапроса = ТекстЗапроса + ""	"" + ИскомыйОбъект.ПолноеИмя + "" КАК ТаблицаСсылок"" + Символы.ПС;
	КонецЕсли; 
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура НайтиСсылкиПоОтбору()
	
	МассивРеквизитов = Новый Массив;
	
	Если РежимОтбора = 1 Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстПроизвольногоЗапроса;
		Для Каждого СтрокаПараметров Из ПараметрыЗапроса Цикл
			Если СтрокаПараметров.ЭтоВыражение Тогда
				Запрос.УстановитьПараметр(СтрокаПараметров.ИмяПараметра, Вычислить(СтрокаПараметров.ЗначениеПараметра));
			Иначе
				Запрос.УстановитьПараметр(СтрокаПараметров.ИмяПараметра, СтрокаПараметров.ЗначениеПараметра);
			КонецЕсли;
		КонецЦикла;
		Попытка
			ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		
	Иначе
		
		ПолучитьНастройкиКомпоновщика();
		
		ТекстЗапросаСКД = ТекстЗапроса;
		УсловиеПоискаПоСтроке = СформироватьУсловиеПоискаПоСтроке(СтрокаПоиска, ОбъектПоиска);
	
		Если ЗначениеЗаполнено(УсловиеПоискаПоСтроке) Тогда
			
			ТекстЗапросаСКД = ТекстЗапросаСКД + ""
			|ГДЕ 
			|	"" + УсловиеПоискаПоСтроке;
			
		КонецЕсли;
		
		СКД = Новый СхемаКомпоновкиДанных;
		ИсточникДанныхСКД = СКД.ИсточникиДанных.Добавить();
		ИсточникДанныхСКД.ТипИсточникаДанных = ""local"";
		ИсточникДанныхСКД.Имя = ""ИсточникДанных"";
		
		НаборДанных = СКД.НаборыДанных.Добавить(Тип(""НаборДанныхЗапросСхемыКомпоновкиДанных""));
		НаборДанных.Имя = ""НаборДанныхЗапроса"";
		НаборДанных.Запрос = ТекстЗапросаСКД;
		НаборДанных.ИсточникДанных = ИсточникДанныхСКД.Имя;
		НаборДанных.АвтоЗаполнениеДоступныхПолей = Истина;
		
		Если ЭтоПериодическийОбъект(ОбъектПоиска) Тогда
			ПараметрСКД = СКД.Параметры.Добавить();
			ПараметрСКД.Имя = ""Период"";
			ПараметрСКД.ТипЗначения = Новый ОписаниеТипов(""СтандартныйПериод"");
			ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Авто;
			ПараметрСКД.ОграничениеИспользования = Ложь;
			ПараметрСКД.ВключатьВДоступныеПоля = Ложь;
			
			ПараметрСКД = СКД.Параметры.Добавить();
			ПараметрСКД.Имя = ""НачДата"";
			ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Авто;
			ПараметрСКД.ОграничениеИспользования = Истина;
			ПараметрСКД.ВключатьВДоступныеПоля = Ложь;
			ПараметрСКД.Выражение = ""&Период.ДатаНачала"";
				
			ПараметрСКД = СКД.Параметры.Добавить();
			ПараметрСКД.Имя = ""КонДата"";
			ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Авто;
			ПараметрСКД.ОграничениеИспользования = Истина;
			ПараметрСКД.ВключатьВДоступныеПоля = Ложь;
			ПараметрСКД.Выражение = ""&Период.ДатаОкончания"";
		КонецЕсли; 
		
		ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКД);
		КомпоновщикНастроекДляПоиска = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроекДляПоиска.Инициализировать(ИсточникНастроек); 
		
		Если ОтборДанных <> Неопределено Тогда
			НастройкиСКД = ОтборДанных;
		Иначе
			НастройкиСКД = СКД.НастройкиПоУмолчанию;
		КонецЕсли;
		
		КомпоновщикНастроекДляПоиска.ЗагрузитьНастройки(НастройкиСКД);
		
		КомпоновщикНастроекДляПоиска.Настройки.Структура.Очистить();
		ГруппировкаСКД = КомпоновщикНастроекДляПоиска.Настройки.Структура.Добавить(Тип(""ГруппировкаКомпоновкиДанных""));
		ГруппировкаСКД.Использование = Истина;
		
		ЕстьПолеОбъект = Ложь;
		ПолеОбъект = Новый ПолеКомпоновкиДанных(""Объект"");
		ЕстьПолеКартинка = Ложь;
		ПолеКартинка = Новый ПолеКомпоновкиДанных(""Картинка"");
		
		Если КомпоновщикНастроекДляПоиска.Настройки.Выбор.Элементы.Количество() = 0 Тогда
			
			ВыбранныеПоля = ГруппировкаСКД.Выбор.Элементы.Добавить(Тип(""АвтоВыбранноеПолеКомпоновкиДанных""));
			ВыбранныеПоля.Использование = Истина;
			
			НовыйЭлемент = КомпоновщикНастроекДляПоиска.Настройки.Выбор.Элементы.Добавить(Тип(""ВыбранноеПолеКомпоновкиДанных""));
			НовыйЭлемент.Использование = Истина;
			НовыйЭлемент.Поле = Новый ПолеКомпоновкиДанных(""СистемныеПоля.НомерПоПорядку""); //SystemFields.GroupSerialNumber
			
			Для каждого ЭлементДоступногоВыбора Из КомпоновщикНастроекДляПоиска.Настройки.ДоступныеПоляВыбора.Элементы Цикл    
				Если НЕ ЭлементДоступногоВыбора.Папка Тогда
					Если ИменаПолейТЧ.НайтиПоЗначению(ЭлементДоступногоВыбора.Поле) = Неопределено Тогда
						НовыйЭлемент = КомпоновщикНастроекДляПоиска.Настройки.Выбор.Элементы.Добавить(Тип(""ВыбранноеПолеКомпоновкиДанных""));
						ЗаполнитьЗначенияСвойств(НовыйЭлемент, ЭлементДоступногоВыбора);
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла; //Для каждого ЭлементДоступногоВыбора Из   
			
			Если ИменаПолейТЧ.Количество() > 0 Тогда
				ГруппаЭлементов = КомпоновщикНастроекДляПоиска.Настройки.Выбор.Элементы.Добавить(Тип(""ГруппаВыбранныхПолейКомпоновкиДанных""));
				ГруппаЭлементов.Использование = Истина;
				ГруппаЭлементов.Заголовок = НСтр(""ru = 'Агрегатные поля'"");
				
				Для каждого ЭлементМассива Из ИменаПолейТЧ Цикл    
					Если КомпоновщикНастроекДляПоиска.Настройки.ДоступныеПоляВыбора.НайтиПоле(ЭлементМассива.Значение) <> Неопределено Тогда
						НовыйЭлемент = ГруппаЭлементов.Элементы.Добавить(Тип(""ВыбранноеПолеКомпоновкиДанных""));
					    НовыйЭлемент.Использование = Истина;
					    НовыйЭлемент.Поле = ЭлементМассива.Значение;
					КонецЕсли; 
				КонецЦикла; //Для каждого ЭлементМассива Из  
			КонецЕсли; 
			
		Иначе
			
			Для каждого ПолеВыбора Из КомпоновщикНастроекДляПоиска.Настройки.Выбор.Элементы Цикл    
				Если ПолеВыбора.Использование Тогда
					ВыбранноеПоле = ГруппировкаСКД.Выбор.Элементы.Добавить(ТипЗнч(ПолеВыбора));
					ЗаполнитьЗначенияСвойств(ВыбранноеПоле, ПолеВыбора);
					Если ТипЗнч(ПолеВыбора) = Тип(""ГруппаВыбранныхПолейКомпоновкиДанных"") Тогда
						Для каждого ПолеГруппы Из ПолеВыбора.Элементы Цикл
							ВыбранноеПолеГруппы = ВыбранноеПоле.Элементы.Добавить(ТипЗнч(ПолеГруппы));
							ЗаполнитьЗначенияСвойств(ВыбранноеПолеГруппы, ПолеГруппы);
						КонецЦикла;
					КонецЕсли;  //  
					Если НЕ ЕстьПолеОбъект И ПолеВыбора.Поле = ПолеОбъект Тогда
						ЕстьПолеОбъект = Истина;
					КонецЕсли; 
					Если НЕ ЕстьПолеКартинка И ПолеВыбора.Поле = ПолеКартинка Тогда
						ЕстьПолеКартинка = Истина;
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла; //Для каждого ПолеВыбора Из  
			
			Если НЕ ЕстьПолеОбъект Тогда
				ВыбранноеПоле = ГруппировкаСКД.Выбор.Элементы.Добавить(Тип(""ВыбранноеПолеКомпоновкиДанных""));
				ВыбранноеПоле.Использование = Истина;
				ВыбранноеПоле.Поле = ПолеОбъект;
			КонецЕсли; 
			Если НЕ ЕстьПолеКартинка Тогда
				ВыбранноеПоле = ГруппировкаСКД.Выбор.Элементы.Добавить(Тип(""ВыбранноеПолеКомпоновкиДанных""));
				ВыбранноеПоле.Использование = Истина;
				ВыбранноеПоле.Поле = ПолеКартинка;
			КонецЕсли; 
			
		КонецЕсли; 
		
		Для каждого ЭлементДоступногоПорядка Из КомпоновщикНастроекДляПоиска.Настройки.Порядок.Элементы Цикл
			Если ЭлементДоступногоПорядка.Использование Тогда
				НовыйПорядок = ГруппировкаСКД.Порядок.Элементы.Добавить(Тип(""ЭлементПорядкаКомпоновкиДанных""));
				ЗаполнитьЗначенияСвойств(НовыйПорядок, ЭлементДоступногоПорядка);
			КонецЕсли; 
		КонецЦикла; //Для каждого ЭлементДоступногоПорядка Из   
		
		Попытка
			
			// Подготовка компоновщика макета компоновки данных.
			КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
			МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, КомпоновщикНастроекДляПоиска.ПолучитьНастройки(),,,Тип(""ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений""));

			ПроцессорКД = Новый ПроцессорКомпоновкиДанных;
			ПроцессорКД.Инициализировать(МакетКомпоновки);

			ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
			ПроцессорВывода.ОтображатьПроцентВывода = Истина;
			ТаблицаРезультата = Новый ТаблицаЗначений;
			ПроцессорВывода.УстановитьОбъект(ТаблицаРезультата);
			ПроцессорВывода.Вывести(ПроцессорКД);
			
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
	МассивРеквизитов.Добавить(""Выбрать"");
	МассивРеквизитов.Добавить(""Картинка"");
	МассивРеквизитов.Добавить(""Объект"");
	Если ТаблицаРезультата.Колонки.Найти(""Выбрать"") = Неопределено Тогда
		ТаблицаРезультата.Колонки.Вставить(0, ""Выбрать"");
		ТаблицаРезультата.ЗаполнитьЗначения(Истина, ""Выбрать"");
	КонецЕсли;
	
	СоздатьКолонки(ТаблицаРезультата, МассивРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьОбъектПоискаВСпискеВыбора()
	
	СписокВыбора = Элементы.ПолеОбъектПоиска.СписокВыбора;
	Для каждого ЭлементСписка Из СписокВыбора Цикл
		Если ЭлементСписка.Значение.ПолноеИмя = ОбъектПоиска.ПолноеИмя И СписокВыбора.Количество() > 1 Тогда
			СписокВыбора.Сдвинуть(ЭлементСписка, - СписокВыбора.Индекс(ЭлементСписка));
			СписокВыбора[0].Значение = ОбъектПоиска;
			СписокВыбора[0].Представление = ОбъектПоискаПредставление;
			Возврат;
		КонецЕсли; 
  	КонецЦикла;
	СписокВыбора.Вставить(0, ОбъектПоиска, ОбъектПоискаПредставление);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыборОбъектаМетаданных()
	
	ПараметрФормы = Новый Структура;
	Если ОбъектПоиска <> Неопределено Тогда
		ПараметрФормы.Вставить(""ТекущаяСтрока"", ОбъектПоиска.ПолноеИмя);
	КонецЕсли;  //  
	
	Результат = ОткрытьФормуМодально(ПолучитьПолноеИмяФормы(""ВыборОбъектаМетаданных""), ПараметрФормы, ЭтаФорма);
	Если ТипЗнч(Результат) = Тип(""Структура"") Тогда 
		
		ПолноеИмяОбъекта = Результат.Имя;
		Если ТипЗнч(ОбъектПоиска) = Тип(""Структура"") И ОбъектПоиска.Свойство(""ПолноеИмя"") И ПолноеИмяОбъекта = ОбъектПоиска.ПолноеИмя Тогда
			Возврат;
		КонецЕсли; 
		
		ПозицияТочки = Найти(ПолноеИмяОбъекта, ""."");
		ТипОбъекта = Лев(ПолноеИмяОбъекта, ПозицияТочки - 1);
		ИмяОбъекта = Сред(ПолноеИмяОбъекта, ПозицияТочки + 1);
		ОбъектПоиска = ЗаполнитьСтруктуруОбъектаПоиска(ТипОбъекта, ИмяОбъекта, Результат.Синоним, Ложь);
		ОбъектПоиска.РежимОтбора  = РежимОтбора;

		ОбъектПоискаПредставление = ОбъектПоиска.Представление;
		ПриИзмененииОбъектаПоиска();
		СохранитьОбъектПоискаВСпискеВыбора();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()
	Если ОбъектПоиска = Неопределено Тогда
		Элементы.НайтиОбъекты.Доступность = Ложь;
		Элементы.КомпоновщикНастроекНастройкиОтборНайтиОбъекты.Доступность = Элементы.НайтиОбъекты.Доступность;
		Элементы.НайденныеОбъектыОткрытьФормуСписка.Доступность = Ложь;
	Иначе
		Элементы.НайтиОбъекты.Доступность = Истина;
		Элементы.КомпоновщикНастроекНастройкиОтборНайтиОбъекты.Доступность = Элементы.НайтиОбъекты.Доступность;
		Элементы.НайденныеОбъектыОткрытьФормуСписка.Доступность = Истина;
		Если НЕ ЭтоПериодическийОбъект(ОбъектПоиска) Тогда
			Элементы.КомпоновщикНастроекНастройкиПараметрыДанных.Видимость = Ложь;
		ИначеЕсли НЕ Элементы.КомпоновщикНастроекНастройкиПараметрыДанных.Видимость Тогда
			Элементы.КомпоновщикНастроекНастройкиПараметрыДанных.Видимость = Истина;
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НайтиОбъектыКлиент()
	
	Состояние(""Поиск объектов..."");
	СохранитьОбъектПоиска();
	НайтиСсылкиПоОтбору();
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНайденныеОбъекты;
	
КонецПроцедуры

// Возвращает экземпляр текущего объекта
//
//
&НаСервере
Функция ЭтотОбъект()

	Обработка = РеквизитФормыВЗначение(""Объект"");
	Возврат Обработка;

КонецФункции // ЭтотОбъект()

&НаСервере
Функция СохранитьНастройкиОбработокСервер(АдресВХранилище)

	Перем Настройки;
	
	Настройки = Новый Соответствие();

	Настройки.Вставить(""ДоступныеОбработки"", РеквизитФормыВЗначение(""ДоступныеОбработки""));
	Настройки.Вставить(""ВыбранныеОбработки"", РеквизитФормыВЗначение(""ВыбранныеОбработки""));

	ИмяФайлаНаСервере = ПолучитьИмяВременногоФайла(""sav"");
	Если НЕ ЗначениеВФайл(ИмяФайлаНаСервере, Настройки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайлаНаСервере);
	АдресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
	УдалитьФайлы(ИмяФайлаНаСервере);
	Если НЕ ЭтоАдресВременногоХранилища(АдресВХранилище) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция СохранитьНастройкиОтборовСервер(АдресВХранилище, ИмяФайлаНаСервере = """")

	Перем Настройки;
	
	Настройки = Новый Соответствие();

	ПолучитьНастройкиКомпоновщика();
	
	Настройки.Вставить(""ОтборДанных"", ОтборДанных);
	Настройки.Вставить(""ОбъектПоискаПредставление"", ОбъектПоискаПредставление);
	Настройки.Вставить(""ОбъектПоиска"", ОбъектПоиска);
	Настройки.Вставить(""ОбъектыПоиска"", ОбъектыПоиска);
	
	Настройки.Вставить(""СтрокаПоиска.СписокВыбора"", Элементы.СтрокаПоиска.СписокВыбора.ВыгрузитьЗначения());
	Настройки.Вставить(""ОбъектПоиска.СписокВыбора"", Элементы.ПолеОбъектПоиска.СписокВыбора);
	
	ИмяФайлаНаСервере = ПолучитьИмяВременногоФайла(""sav"");
	Если НЕ ЗначениеВФайл(ИмяФайлаНаСервере, Настройки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайлаНаСервере);
	АдресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
	УдалитьФайлы(ИмяФайлаНаСервере);
	Если НЕ ЭтоАдресВременногоХранилища(АдресВХранилище) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДобавитьКолонкиДляСовместимости(Знач ТаблицаДанных)  
	
	Если ТаблицаДанных <> Неопределено Тогда
		//Для совместимости с прежними версиями
		Если ТаблицаДанных.Колонки.Найти(""Идентификатор"") = Неопределено Тогда
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(Тип(""Число""));
			КЧ = Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Неотрицательный);
			ОписаниеТипаЧисло = Новый ОписаниеТипов(МассивТипов, КЧ);
			ТаблицаДанных.Колонки.Добавить(""Идентификатор"", ОписаниеТипаЧисло);
		КонецЕсли; 
	КонецЕсли; 
	Возврат ТаблицаДанных;
	
КонецФункции //

&НаСервере
Процедура ЗагрузитьДоступныеОбработкиИзНастроекСервер(Настройки)

	ДоступныеОбработкиТаблица = Настройки[""ДоступныеОбработки""];
	//Для совместимости с прежними версиями
	Если ДоступныеОбработкиТаблица <> Неопределено Тогда
		ДоступныеОбработкиТаблица = ДобавитьКолонкиДляСовместимости(ДоступныеОбработкиТаблица);
		ЭлементыДерева = ЭтаФорма.ДоступныеОбработки.ПолучитьЭлементы();
		ЭлементыДерева.Очистить();
		Для каждого СтрокаДерева Из ДоступныеОбработкиТаблица.Строки Цикл
			НоваяСтрокаДерева = ЭлементыДерева.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДерева, СтрокаДерева);
			Для каждого ПодСтрокаДерева Из СтрокаДерева.Строки Цикл    
				ЗаполнитьЗначенияСвойств(НоваяСтрокаДерева.ПолучитьЭлементы().Добавить(), ПодСтрокаДерева);
			КонецЦикла; //Для каждого  Из   
  		КонецЦикла; //Для каждого  Из  
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСпискиВыбораИзНастроекСервер(Настройки)

	СписокВыбора = Настройки.Получить(""СтрокаПоиска.СписокВыбора"");
	Если СписокВыбора <> Неопределено И ТипЗнч(СписокВыбора) = Тип(""Массив"") Тогда
		Элементы.СтрокаПоиска.СписокВыбора.ЗагрузитьЗначения(СписокВыбора);
	КонецЕсли; 
	
	СписокВыбора = Настройки.Получить(""ОбъектПоиска.СписокВыбора"");
	Если СписокВыбора <> Неопределено И ТипЗнч(СписокВыбора) = Тип(""СписокЗначений"") Тогда
		Элементы.ПолеОбъектПоиска.СписокВыбора.Очистить();
		Для каждого ЭлементСписка Из СписокВыбора Цикл    
			Элементы.ПолеОбъектПоиска.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЦикла; //Для каждого ЭлементСписка Из  
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиОбработокСервер(АдресВХранилище)

	Если НЕ ЭтоАдресВременногоХранилища(АдресВХранилище) Тогда
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
	
	// получаем имя временного файла в локальной ФС на сервере
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""sav"");
	
	// получаем файл настроек для зачитки
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	Настройки = ЗначениеИзФайла(ИмяВременногоФайла);
	УдалитьФайлы(ИмяВременногоФайла);
	
	ЗагрузитьДоступныеОбработкиИзНастроекСервер(Настройки);
	
	ВыбранныеОбработкиТаблица = Настройки[""ВыбранныеОбработки""];
	Если ВыбранныеОбработкиТаблица <> Неопределено Тогда
		ЭтаФорма.ВыбранныеОбработки.Загрузить(ВыбранныеОбработкиТаблица);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиОтборовСервер(АдресВХранилище)

	Если НЕ ЭтоАдресВременногоХранилища(АдресВХранилище) Тогда
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
	// получаем имя временного файла в локальной ФС на сервере
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""sav"");
	// получаем файл настроек для зачитки
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	Настройки = ЗначениеИзФайла(ИмяВременногоФайла);
	УдалитьФайлы(ИмяВременногоФайла);
	
	ОбъектПоискаПредставление = Настройки[""ОбъектПоискаПредставление""];
	ОбъектПоиска = Настройки[""ОбъектПоиска""];
	ОтборДанных = Настройки[""ОтборДанных""];
	ОбъектыПоиска = Настройки[""ОбъектыПоиска""];
	
	Если ТипЗнч(ОбъектПоиска) = Тип(""Структура"") Тогда
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ОбъектПоиска.Тип + ""."" + ОбъектПоиска.Имя);
		Если ОбъектМетаданных = Неопределено Тогда
			ОбъектПоиска = Неопределено;
			ОбъектПоискаПредставление = """";
			ОтборДанных = Неопределено;
		КонецЕсли; 
	КонецЕсли; 
	
	ЗагрузитьСпискиВыбораИзНастроекСервер(Настройки);
	
	Если ТипЗнч(ОбъектПоиска) = Тип(""Структура"") И НЕ ОбъектПоиска.Свойство(""ПолноеИмя"") Тогда
		ОбъектПоиска.Вставить(""ПолноеИмя"", ОбъектПоиска.Тип + ""."" + ОбъектПоиска.Имя);
	КонецЕсли; 
	
	Если ТипЗнч(ОбъектыПоиска) <> Тип(""Структура"") Тогда
		ОбъектыПоиска = Новый Структура;
	КонецЕсли; 
	
	Если ТипЗнч(ОбъектПоиска) = Тип(""Структура"") Тогда
		Если НЕ ОбъектПоиска.Свойство(""РежимОтбора"") Тогда
			ОбъектПоиска.Вставить(""РежимОтбора"", 0);
		Иначе
			РежимОтбора  = ОбъектПоиска.РежимОтбора;
		КонецЕсли; 
		ПриИзмененииОбъектаПоиска();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНастройкиОбработокСервер()
	
	ЭтотОбъект().ЗагрузитьОбработки(ЭтаФорма, ДоступныеОбработки, ВыбранныеОбработки, СтруктураФорм);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЗаполнитьСтруктуруОбъектаПоиска(Знач ТипОбъекта = """", Знач ИмяОбъекта = """", Знач СинонимОбъекта = """", ДобавлятьИмяОбъекта = Истина)

	Структура = Новый Структура;
	Структура.Вставить(""Тип"", ТипОбъекта);
	Структура.Вставить(""Имя"", ИмяОбъекта);
	Если ЗначениеЗаполнено(ТипОбъекта) Тогда 
		Структура.Вставить(""ПолноеИмя"", ТипОбъекта + ""."" + ИмяОбъекта);
		Структура.Вставить(""Представление"", СинонимОбъекта + ?(ДобавлятьИмяОбъекта, "" ("" + ТипОбъекта + ""."" + ИмяОбъекта + "")"", """"));
	Иначе
		Структура.Вставить(""ПолноеИмя"", """");
		Структура.Вставить(""Представление"", """");
	КонецЕсли; 
	Структура.Вставить(""РежимОтбора"", 0);
	Возврат Структура;

КонецФункции // ЗаполнитьСтруктуруОбъектаПоиска()

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокОбъектовМетаданных(Список, ТипОбъекта, ОбъектыМетаданных)

	Для Каждого ОбъектМетаданных Из ОбъектыМетаданных Цикл
		Если ПравоДоступа(""Просмотр"", ОбъектМетаданных) Тогда
			СинонимОбъекта = ОбъектМетаданных.Синоним;
			Если Не ЗначениеЗаполнено(СинонимОбъекта) Тогда
				СинонимОбъектаа = ОбъектМетаданных.Имя;
			КонецЕсли;
			Структура = ЗаполнитьСтруктуруОбъектаПоиска(ТипОбъекта, ОбъектМетаданных.Имя, СинонимОбъекта);
			Список.Добавить(Структура, СинонимОбъекта, , БиблиотекаКартинок[ТипОбъекта]);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ЗаполнитьСписокОбъектовМетаданных()

&НаКлиенте
Процедура ОткрытьФормуОбработки(ТекущаяСтрока, ИндексСтроки = Неопределено)
	
	СтруктураПараметров = СформироватьСтруктуруПараметров();
	СтруктураПараметров.Настройка = ТекущаяСтрока.Настройка[0].Значение;
	Если ТипЗнч(СтруктураПараметров.Настройка) = Тип(""Структура"") 
		И СтруктураПараметров.Настройка.Свойство(""Прочее"") И СтруктураПараметров.Настройка.Прочее = Неопределено Тогда
		СтруктураПараметров.Настройка.Прочее = ПолучитьНастройкуПоУмолчанию().Прочее;
	КонецЕсли; 
	
	Родитель = ТекущаяСтрока.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
		Если НЕ ОбработкаДоступна(ОбъектПоиска.Тип, ТекущаяСтрока.ИмяФормы) Тогда
			Предупреждение(""Данная обработка недоступна для типа <"" + ОбъектПоиска.Тип + "">"");
			Возврат;
		КонецЕсли;
		
		СтруктураПараметров.Настройки = СформироватьНастройки(ТекущаяСтрока);
		СтруктураПараметров.Вставить(""Родитель"", ТекущаяСтрока.ПолучитьИдентификатор());
		СтруктураПараметров.Вставить(""ТекущаяСтрока"", Неопределено);
		
		Обработка = ПолучитьФорму(ПолучитьПолноеИмяФормы(ТекущаяСтрока.ИмяФормы), СтруктураПараметров, ЭтаФорма);
	Иначе
		Если НЕ ОбработкаДоступна(ОбъектПоиска.Тип, Родитель.ИмяФормы) Тогда
			Предупреждение(""Данная обработка недоступна для типа <"" + ОбъектПоиска.Тип + "">"");
			Возврат;
		КонецЕсли;
		
		СтруктураПараметров.Настройки = СформироватьНастройки(Родитель);
		СтруктураПараметров.Вставить(""Родитель"", Родитель.ПолучитьИдентификатор());
		СтруктураПараметров.Вставить(""ТекущаяСтрока"", ИндексСтроки);
		
		Обработка = ПолучитьФорму(ПолучитьПолноеИмяФормы(Родитель.ИмяФормы), СтруктураПараметров, ЭтаФорма);
	КонецЕсли;

	ОткрытьФормуМодально(Обработка);
	
КонецПроцедуры

// Добавляет отбор в набор отборов компоновщика или группы отборов
//
&НаСервереБезКонтекста
Функция ДобавитьОтбор(ЭлементСтруктуры, Знач Поле, Значение, ВидСравнения = Неопределено, Использование = Истина) Экспорт
	
	Если ТипЗнч(Поле) = Тип(""Строка"") Тогда
		Поле = Новый ПолеКомпоновкиДанных(Поле);
	КонецЕсли;
	
	Если ТипЗнч(ЭлементСтруктуры) = Тип(""КомпоновщикНастроекКомпоновкиДанных"") Тогда
		Отбор = ЭлементСтруктуры.Настройки.Отбор;
	Иначе
		Отбор = ЭлементСтруктуры;
	КонецЕсли;
	
	Если ВидСравнения = Неопределено Тогда
		ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;
	
	НовыйЭлемент = Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
	НовыйЭлемент.Использование  = Использование;
	НовыйЭлемент.ЛевоеЗначение  = Поле;
	НовыйЭлемент.ВидСравнения   = ВидСравнения;
	НовыйЭлемент.ПравоеЗначение = Значение;
	Возврат НовыйЭлемент;
	
КонецФункции

// Процедура удаляет все элементы настроек СхемыКД 
//
&НаСервереБезКонтекста
Процедура ОчиститьНастройкиСКД(Настройки)
	
	Если Настройки = Неопределено ИЛИ Тип(Настройки) <> Тип(""НастройкиКомпоновкиДанных"") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Параметр Из Настройки.ПараметрыДанных.Элементы Цикл
		Параметр.Значение = Неопределено;
		Параметр.Использование = Ложь;
	КонецЦикла;
	
	Настройки.ПользовательскиеПоля.Элементы.Очистить();
	Настройки.Отбор.Элементы.Очистить();
	Настройки.Порядок.Элементы.Очистить();
	Настройки.Структура.Очистить();
	Настройки.Выбор.Элементы.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройки(КомпоновщикНастроек, Настройки)
	
	ОчиститьНастройкиСКД(КомпоновщикНастроек.Настройки);
	
	СхемаКомпоновки = Новый СхемаКомпоновкиДанных();		
    	
	Источник = СхемаКомпоновки.ИсточникиДанных.Добавить();
	Источник.Имя = ""ИсточникДанных"";
	Источник.СтрокаСоединения="""";
	Источник.ТипИсточникаДанных = ""local"";
	
	НаборДанных = СхемаКомпоновки.НаборыДанных.Добавить(Тип(""НаборДанныхЗапросСхемыКомпоновкиДанных""));
	НаборДанных.Запрос = ТекстЗапроса;
	НаборДанных.Имя = ""НаборДанныхЗапроса"";
	НаборДанных.ИсточникДанных = Источник.Имя;
	НаборДанных.АвтоЗаполнениеДоступныхПолей = Истина;
	
	Если ЭтоПериодическийОбъект(ОбъектПоиска) Тогда
		ПараметрСКД = СхемаКомпоновки.Параметры.Добавить();
		ПараметрСКД.Имя = ""Период"";
		ПараметрСКД.ТипЗначения = Новый ОписаниеТипов(""СтандартныйПериод"");
		ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Авто;
		ПараметрСКД.ОграничениеИспользования = Ложь;
		ПараметрСКД.ВключатьВДоступныеПоля = Ложь;
		
		ПараметрСКД = СхемаКомпоновки.Параметры.Добавить();
		ПараметрСКД.Имя = ""НачДата"";
		ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Авто;
		ПараметрСКД.ОграничениеИспользования = Истина;
		ПараметрСКД.ВключатьВДоступныеПоля = Ложь;
		ПараметрСКД.Выражение = ""&Период.ДатаНачала"";
			
		ПараметрСКД = СхемаКомпоновки.Параметры.Добавить();
		ПараметрСКД.Имя = ""КонДата"";
		ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Авто;
		ПараметрСКД.ОграничениеИспользования = Истина;
		ПараметрСКД.ВключатьВДоступныеПоля = Ложь;
		ПараметрСКД.Выражение = ""&Период.ДатаОкончания"";
	КонецЕсли; 
		
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновки, УникальныйИдентификатор);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы)); 
	
	Если ТипЗнч(Настройки) = Тип(""НастройкиКомпоновкиДанных"") Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	Иначе
		Период = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(""Период"");
		Если Период <> Неопределено Тогда
			Период.Использование = Ложь;
			Период.Значение = Новый СтандартныйПериод();
		КонецЕсли; 
		Период = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(""НачДата"");
		Если Период <> Неопределено Тогда
			Период.Использование = Ложь;
			Период.Значение = Дата(1,1,1);
		КонецЕсли; 
		Период = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(""КонДата"");
		Если Период <> Неопределено Тогда
			Период.Использование = Ложь;
			Период.Значение = Дата(1,1,1);
		КонецЕсли; 
	КонецЕсли;
	КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.Полное);
	КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
	Если КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество() = 0 Тогда
		Для каждого ЭлементДоступногоОтбора Из КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.Элементы Цикл    
			ДобавитьОтбор(КомпоновщикНастроек.Настройки.Отбор, ЭлементДоступногоОтбора.Поле, , ВидСравненияКомпоновкиДанных.Равно, Ложь);
		КонецЦикла; //Для каждого ЭлементДоступногоОтбора Из   
	КонецЕсли; 
	
	Если КомпоновщикНастроек.Настройки.Порядок.Элементы.Количество() = 0 Тогда
		Для каждого ЭлементДоступногоПорядка Из КомпоновщикНастроек.Настройки.ДоступныеПоляПорядка.Элементы Цикл    
			НовыйПорядок = КомпоновщикНастроек.Настройки.Порядок.Элементы.Добавить(Тип(""ЭлементПорядкаКомпоновкиДанных""));
		    НовыйПорядок.Использование = Ложь;
		    НовыйПорядок.Поле = ЭлементДоступногоПорядка.Поле;
		    НовыйПорядок.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
		КонецЦикла; //Для каждого ЭлементДоступногоПорядка Из   
	КонецЕсли; 
	
	Если КомпоновщикНастроек.Настройки.Выбор.Элементы.Количество() = 0 Тогда
		НовыйЭлемент = КомпоновщикНастроек.Настройки.Выбор.Элементы.Добавить(Тип(""ВыбранноеПолеКомпоновкиДанных""));
		НовыйЭлемент.Использование = Истина;
		НовыйЭлемент.Поле = Новый ПолеКомпоновкиДанных(""СистемныеПоля.НомерПоПорядку""); //SystemFields.GroupSerialNumber
		
		Для каждого ЭлементДоступногоВыбора Из КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.Элементы Цикл    
			Если НЕ ЭлементДоступногоВыбора.Папка Тогда
				Если ИменаПолейТЧ.НайтиПоЗначению(ЭлементДоступногоВыбора.Поле) = Неопределено Тогда
					НовыйЭлемент = КомпоновщикНастроек.Настройки.Выбор.Элементы.Добавить(Тип(""ВыбранноеПолеКомпоновкиДанных""));
				    НовыйЭлемент.Использование = Истина;
				    НовыйЭлемент.Поле = ЭлементДоступногоВыбора.Поле;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; //Для каждого ЭлементДоступногоВыбора Из   
		
		Если ИменаПолейТЧ.Количество() > 0 Тогда
			
			ГруппаЭлементов = КомпоновщикНастроек.Настройки.Выбор.Элементы.Добавить(Тип(""ГруппаВыбранныхПолейКомпоновкиДанных""));
			ГруппаЭлементов.Использование = Истина;
			ГруппаЭлементов.Заголовок = НСтр(""ru = 'Агрегатные поля'"");
			
			Для каждого ЭлементМассива Из ИменаПолейТЧ Цикл    
				Если КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.НайтиПоле(ЭлементМассива.Значение) <> Неопределено Тогда
					НовыйЭлемент = ГруппаЭлементов.Элементы.Добавить(Тип(""ВыбранноеПолеКомпоновкиДанных""));
				    НовыйЭлемент.Использование = Истина;
				    НовыйЭлемент.Поле = ЭлементМассива.Значение;
				КонецЕсли; 
			КонецЦикла; //Для каждого ЭлементМассива Из  
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

//////////////////////////////////////
//ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ОчиститьКомандыКонтекстноеМенюНайденныеОбъекты()
	
	Для каждого ЭлементСтруктуры Из СтруктураФорм Цикл    
		Команда = ЭтаФорма.Команды.Найти(ЭлементСтруктуры.Ключ);
		Если Команда <> Неопределено Тогда
			ЭтаФорма.Команды.Удалить(Команда);
		КонецЕсли; 
		ЭлементФормы = Элементы.Найти(""НайденныеОбъектыКонтекстноеМеню_"" + ЭлементСтруктуры.Ключ);
		Если ЭлементФормы <> Неопределено Тогда
			ЭтаФорма.Элементы.Удалить(ЭлементФормы);
		КонецЕсли; 
	КонецЦикла; //Для каждого ЭлементСтруктуры Из  
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКонтекстноеМенюНайденныеОбъекты()
	
	ГруппаМеню = Элементы.НайденныеОбъекты.КонтекстноеМеню;
	Для Каждого Стр Из ДоступныеОбработки.ПолучитьЭлементы() Цикл
		НоваяКоманда = ЭтаФорма.Команды.Добавить(Стр.ИмяФормы);
		НоваяКоманда.Действие = ""Подключаемый_ВыполнитьОбработку"";
		НоваяКоманда.Заголовок = Стр.Обработка;
		НоваяКоманда.Картинка = БиблиотекаКартинок.Обработка;
		НовыйЭлемент =  Элементы.Добавить(""НайденныеОбъектыКонтекстноеМеню_"" + Стр.ИмяФормы, Тип(""КнопкаФормы""), ГруппаМеню);
		НовыйЭлемент.ИмяКоманды = НоваяКоманда.Имя;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство(""АвтоТест"") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Элементы.ПолеОбъектПоиска.ВысотаСпискаВыбора = 15;
	Элементы.ПолеОбъектПоиска.СписокВыбора.ТипЗначения = Новый ОписаниеТипов(""Структура"");
	
	//ЗаполнитьСписокОбъектовМетаданных(СписокОбъектовМетаданных, ""Справочник"", Метаданные.Справочники);
	//ЗаполнитьСписокОбъектовМетаданных(СписокОбъектовМетаданных, ""ПланВидовХарактеристик"", Метаданные.ПланыВидовХарактеристик);
	//ЗаполнитьСписокОбъектовМетаданных(СписокОбъектовМетаданных, ""ПланВидовРасчета"", Метаданные.ПланыВидовРасчета);
	//ЗаполнитьСписокОбъектовМетаданных(СписокОбъектовМетаданных, ""ПланОбмена"", Метаданные.ПланыОбмена);
	//ЗаполнитьСписокОбъектовМетаданных(СписокОбъектовМетаданных, ""Документ"", Метаданные.Документы);
	//ЗаполнитьСписокОбъектовМетаданных(СписокОбъектовМетаданных, ""БизнесПроцесс"", Метаданные.БизнесПроцессы);
	//ЗаполнитьСписокОбъектовМетаданных(СписокОбъектовМетаданных, ""Задача"", Метаданные.Задачи);
	
	ЭтотОбъект().ЗагрузитьОбработки(ЭтаФорма, ДоступныеОбработки, ВыбранныеОбработки, СтруктураФорм);
	ЗаполнитьКонтекстноеМенюНайденныеОбъекты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбработкаПеретаскивание = Ложь;
	
	УстановитьВидимостьДоступность();
	УстановитьКартинкиОбработок();
		
	Если ТипЗнч(ОбъектыПоиска) <> Тип(""Структура"") Тогда
		ОбъектыПоиска = Новый Структура;
	КонецЕсли; 
	
	Если ТипЗнч(ОбъектПоиска) <> Тип(""Структура"") Тогда
		ОбъектПоиска = ЗаполнитьСтруктуруОбъектаПоиска();
	КонецЕсли; 
	
	ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + "". "" + Объект.Версия;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СохранитьОбъектПоиска();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	ОбъектПоиска = Настройки[""ОбъектПоиска""];
	ОтборДанных = Настройки[""ОтборДанных""];
	ОбъектыПоиска = Настройки[""ОбъектыПоиска""];
	
	Если ТипЗнч(ОбъектПоиска) = Тип(""Структура"") Тогда
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ОбъектПоиска.Тип + ""."" + ОбъектПоиска.Имя);
		Если ОбъектМетаданных = Неопределено Тогда
			ОбъектПоиска = Неопределено;
			ОбъектПоискаПредставление = """";
			ОтборДанных = Неопределено;
		КонецЕсли; 
	КонецЕсли; 
		
	ЗагрузитьСпискиВыбораИзНастроекСервер(Настройки);
	//ЗагрузитьДоступныеОбработкиИзНастроекСервер(Настройки);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ТипЗнч(ОбъектПоиска) = Тип(""Структура"") Тогда
		Если НЕ ОбъектПоиска.Свойство(""ПолноеИмя"") И ЗначениеЗаполнено(ОбъектПоиска.Тип) Тогда
			ОбъектПоиска.Вставить(""ПолноеИмя"", ОбъектПоиска.Тип + ""."" + ОбъектПоиска.Имя);
		КонецЕсли; 
		Если НЕ ОбъектПоиска.Свойство(""РежимОтбора"") Тогда
			ОбъектПоиска.Вставить(""РежимОтбора"", 0);
		Иначе
			РежимОтбора  = ОбъектПоиска.РежимОтбора;
		КонецЕсли; 
		ПриИзмененииОбъектаПоиска(Истина);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить(""ОбъектПоиска.СписокВыбора"", Элементы.ПолеОбъектПоиска.СписокВыбора);
	Настройки.Вставить(""СтрокаПоиска.СписокВыбора"", Элементы.СтрокаПоиска.СписокВыбора.ВыгрузитьЗначения());
	
КонецПроцедуры

//////////////////////////////////////
//ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПолеОбъектПоискаПриИзменении(Элемент)
	
	ПриИзмененииОбъектаПоиска();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОбъектПоискаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СохранитьОбъектПоиска();
	ВыборОбъектаМетаданных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОбъектПоискаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СохранитьОбъектПоиска();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОбъектПоискаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ОбъектПоискаПредставление = ВыбранноеЗначение.Представление;
		ОбъектПоиска = ВыбранноеЗначение;
	Иначе
		ОбъектПоискаПредставление = """";
		ОбъектПоиска = Неопределено;
	КонецЕсли;
	
	Если ОбъектПоиска <> Неопределено Тогда
		
		ПриИзмененииОбъектаПоиска();
		СохранитьОбъектПоискаВСпискеВыбора();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		СписокВыбора = Элементы.СтрокаПоиска.СписокВыбора;
		ПозицияСтроки = СписокВыбора.НайтиПоЗначению(СтрокаПоиска);
		Если ПозицияСтроки = Неопределено Тогда
			СписокВыбора.Вставить(0, СтрокаПоиска);
		Иначе
			СписокВыбора.Сдвинуть(ПозицияСтроки, - СписокВыбора.Индекс(ПозицияСтроки));
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеОбработкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Настройка = Элемент.ТекущиеДанные.Настройка[0].Значение;
	Настройка.Обработка = Элемент.ТекущиеДанные.Обработка;
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеОбработкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИндексСтроки = Элементы.ДоступныеОбработки.ТекущаяСтрока;
	ТекущаяСтрока = ДоступныеОбработки.НайтиПоИдентификатору(ИндексСтроки);
	ОткрытьФормуОбработки(ТекущаяСтрока, ИндексСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеОбработкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;

	Родитель = Элемент.ТекущиеДанные.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
		Если Копирование Тогда
			Отказ = Истина;
		Иначе
			Если НЕ ОбработкаДоступна(ОбъектПоиска.Тип, Элемент.ТекущиеДанные.ИмяФормы) Тогда
				Предупреждение(""Данная обработка недоступна для типа <"" + ОбъектПоиска.Тип + "">"");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			Отказ = НЕ ПолучитьФорму(ПолучитьПолноеИмяФормы(Элемент.ТекущиеДанные.ИмяФормы)).мИспользоватьНастройки;
			Если НЕ Отказ Тогда
				//свое добавление
				Отказ = Истина;
				НоваяСтрока = ДобавитьСтроку(Элемент.ТекущиеДанные);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если НЕ ОбработкаДоступна(ОбъектПоиска.Тип, Родитель.ИмяФормы) Тогда
			Предупреждение(""Данная обработка недоступна для типа <"" + ОбъектПоиска.Тип + "">"");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		Отказ = Истина;
		Если НЕ Копирование Тогда
			Если ПолучитьФорму(ПолучитьПолноеИмяФормы(Родитель.ИмяФормы)).мИспользоватьНастройки Тогда
				НоваяСтрока = ДобавитьСтроку(Родитель);
			КонецЕсли;
		Иначе
			ТекСтрока = Элемент.ТекущиеДанные;
			ТекРодитель = Родитель;
			НоваяСтрока = ДобавитьСтроку(ТекРодитель);
			
			Если НЕ ТекСтрока.Настройка[0].Значение = Неопределено Тогда
				НоваяНастройка = Новый Структура();
				Для Каждого РеквизитНастройки Из ТекСтрока.Настройка[0].Значение Цикл
					Значение = РеквизитНастройки.Значение;
					Выполнить(""НоваяНастройка.Вставить(Строка(РеквизитНастройки.Ключ), Значение);"");
				КонецЦикла;

				НоваяСтрока.Настройка[0].Значение = НоваяНастройка;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеОбработкиПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеОбработкиПередУдалением(Элемент, Отказ)
	Если Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если Вопрос(""Удалить настройку?"", РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК) = КодВозвратаДиалога.ОК Тогда
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить(""СтрокаДоступнойОбработки"", Элемент.ТекущаяСтрока);
		
		МассивДляУдаления = ВыбранныеОбработки.НайтиСтроки(ПараметрыОтбора);
		Для Индекс = 0 по МассивДляУдаления.Количество() - 1 Цикл
			ВыбранныеОбработки.Удалить(МассивДляУдаления[Индекс]);
		КонецЦикла;
	Иначе
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеОбработкиНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	Если НЕ ПроверитьДоступностьОбработки() Тогда
		СтандартнаяОбработка = Ложь;
		Предупреждение(""Данная обработка недоступна для типа <"" + ОбъектПоиска.Тип + "">"");
		Возврат;
	КонецЕсли;
	
	ОбработкаПеретаскивание = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеОбработкиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Если НЕ ОбработкаПеретаскивание Тогда
		Возврат;

	КонецЕсли;
	
	Для Каждого СтрВыбранных Из ПараметрыПеретаскивания.Значение Цикл
		СтрВыбранныхИдентификатор = СтрВыбранных.ПолучитьИдентификатор();
		СтрДоступных = ДоступныеОбработки.НайтиПоИдентификатору(СтрВыбранныхИдентификатор);
		СтрДоступных.Идентификатор = СтрДоступных.ПолучитьИдентификатор();
		
		НовСтр = ВыбранныеОбработки.Добавить();
		НовСтр.ОбработкаНастройка = СтрДоступных.Обработка;
		НовСтр.СтрокаДоступнойОбработки = СтрДоступных.ПолучитьИдентификатор();
		НовСтр.Выбрать = Истина;
		НовСтр.Настройка = СтрДоступных.Настройка;
	КонецЦикла;
	
	ОбработкаПеретаскивание = Ложь;
КонецПроцедуры

&НаСервере
Функция ПолучитьКлючЗаписиРегистра(Знач СтрокаТаблицы)
	
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ОбъектПоиска.ПолноеИмя);
	
	СтрокаТаблицы = НайденныеОбъекты.НайтиПоИдентификатору(СтрокаТаблицы);
	
	СтруктураОтбора = Новый Структура;
	Для Каждого Реквизит Из ОбъектМетаданных.Измерения Цикл
		СтруктураОтбора.Вставить(Реквизит.Имя, СтрокаТаблицы[Реквизит.Имя]);
	КонецЦикла; 
	Если ОбъектМетаданных.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический Тогда
		СтруктураОтбора.Вставить(""Период"", СтрокаТаблицы[""Период""]);
	КонецЕсли; 
	КлючЗаписи = РегистрыСведений[ОбъектПоиска.Имя].СоздатьКлючЗаписи(СтруктураОтбора);
	
	Возврат КлючЗаписи;
	
Конецфункции //

&НаКлиенте
Процедура НайденныеОбъектыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.НайденныеОбъекты.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		Если ОбъектПоиска.Тип <> ""РегистрСведений"" Тогда
			ОткрытьЗначение(ТекущиеДанные.Объект);
		Иначе
			КлючЗаписи = ПолучитьКлючЗаписиРегистра(ВыбраннаяСтрока);
			ОткрытьФорму(""РегистрСведений."" + ОбъектПоиска.Имя + "".ФормаЗаписи"", Новый Структура(""Ключ"", КлючЗаписи));
		КонецЕсли;  //  
	КонецЕсли;  
	
КонецПроцедуры

//////////////////////////////////////
//ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД

&НаКлиенте
Процедура НайтиОбъекты(Команда)
	
	НайтиОбъектыКлиент();

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	ВыбратьЭлементы(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыборВсех(Команда)
	ВыбратьЭлементы(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
	Для каждого ВыбраннаяОбработка из ВыбранныеОбработки Цикл
		ОбработкаПрерыванияПользователя();
		
		Если НЕ ВыбраннаяОбработка.Выбрать Тогда
			Продолжить;
		КонецЕсли;
		
		Родитель = Неопределено;
		Для каждого ДоступныеОбработкиСтрока Из ДоступныеОбработки.ПолучитьЭлементы() Цикл
			Строки = ДоступныеОбработкиСтрока.ПолучитьЭлементы();
			Если Строки.Количество() > 0 Тогда
				Для каждого СтрокаСтроки Из Строки Цикл
					Если СтрокаСтроки.Идентификатор = ВыбраннаяОбработка.СтрокаДоступнойОбработки Тогда
						Стр = СтрокаСтроки;
						Родитель = ДоступныеОбработкиСтрока;
						Прервать;
					КонецЕсли; 
				КонецЦикла;
				Если Родитель <> Неопределено Тогда
					Прервать;
				КонецЕсли; 
			Иначе
				Если ДоступныеОбработкиСтрока.Обработка <> ВыбраннаяОбработка.ОбработкаНастройка Тогда
					Продолжить;
				КонецЕсли; 
				Стр = ДоступныеОбработкиСтрока;
			КонецЕсли; 
		КонецЦикла;
		
		//Стр = ДоступныеОбработки.НайтиПоИдентификатору(Строка.СтрокаДоступнойОбработки);
		//Родитель = Стр.ПолучитьРодителя();
		
		СтруктураПараметров = СформироватьСтруктуруПараметров();
		СтруктураПараметров.Настройка = Стр.Настройка[0].Значение;
		
		Если Родитель = Неопределено Тогда
			ИмяФормыОбработки = Стр.ИмяФормы;
			
			СтруктураПараметров.Настройки = СформироватьНастройки(Стр);
			СтруктураПараметров.Вставить(""Родитель"", Стр.ПолучитьИдентификатор());
			СтруктураПараметров.Вставить(""ТекущаяСтрока"", Неопределено);
		Иначе
			ИмяФормыОбработки = Родитель.ИмяФормы;
			
			СтруктураПараметров.Настройки = СформироватьНастройки(Родитель);
			СтруктураПараметров.Вставить(""Родитель"", Родитель.ПолучитьИдентификатор());
			СтруктураПараметров.Вставить(""ТекущаяСтрока"", ВыбраннаяОбработка.СтрокаДоступнойОбработки);
		КонецЕсли;
		
		Если НЕ ОбработкаДоступна(ОбъектПоиска.Тип, ИмяФормыОбработки) Тогда
			Сообщить(""Обработка "" + ИмяФормы + "" недоступна для типа <"" + ОбъектПоиска.Тип + "">"");
			Продолжить;
		КонецЕсли;
		
		Обработка = ПолучитьФорму(ПолучитьПолноеИмяФормы(ИмяФормыОбработки), СтруктураПараметров, ЭтаФорма);
		Обработка.ЗагрузитьНастройку();
		Обработка.ВыполнитьОбработку();
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьНастройкиКомпоновщика()
	
	ОтборДанных = КомпоновщикНастроек.ПолучитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура Отбор(Команда)
	Если ОбъектПоиска = Неопределено Тогда
		Возврат;
	ИначеЕсли НЕ (ЗначениеЗаполнено(ОбъектПоиска.Тип) И ЗначениеЗаполнено(ОбъектПоиска.Имя)) Тогда 
		Возврат;
	КонецЕсли;
	
	ПолучитьНастройкиКомпоновщика();
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""ТекстЗапроса"", ТекстЗапроса);
	СтруктураПараметров.Вставить(""ТекстПроизвольногоЗапроса"", ТекстПроизвольногоЗапроса);
	СтруктураПараметров.Вставить(""СтрокаПоиска"", СтрокаПоиска);
	СтруктураПараметров.Вставить(""СтрокаПоискаСписок"", Элементы.СтрокаПоиска.СписокВыбора.ВыгрузитьЗначения());
	СтруктураПараметров.Вставить(""Настройки"", ОтборДанных);
	СтруктураПараметров.Вставить(""ОбъектПоиска"", ОбъектПоиска);
	СтруктураПараметров.Вставить(""РежимОтбора"", ОбъектПоиска.РежимОтбора);
	СтруктураПараметров.Вставить(""ПараметрыЗапроса"", ПараметрыЗапроса);
	СтруктураПараметров.Вставить(""ИменаПолейТЧ"", ИменаПолейТЧ);
	
	ФормаОтбора = ПолучитьФорму(ПолучитьПолноеИмяФормы(""ФормаОтбора""), СтруктураПараметров, ЭтаФорма);
	РезультатОтбора = ОткрытьФормуМодально(ФормаОтбора);
	Если РезультатОтбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьРезультатОтбора(РезультатОтбора);
	СохранитьОбъектПоискаВСпискеВыбора();
	
	НачатьПоиск = Ложь;
	Если РезультатОтбора.Свойство(""НачатьПоиск"", НачатьПоиск) И НачатьПоиск Тогда
		НайтиОбъектыКлиент();
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсеОбработки(Команда)
	ВыбратьОбработки(""ВыбранныеОбработки"", Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыборВсехОбработок(Команда)
	ВыбратьОбработки(""ВыбранныеОбработки"", Ложь);
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОбработки(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""ОбрабатыватьВТранзакции"", ОбрабатыватьВТранзакции);
	СтруктураПараметров.Вставить(""КоличествоОбъектовНаТранзакцию"", КоличествоОбъектовНаТранзакцию);
	СтруктураПараметров.Вставить(""ИспользоватьРежимЗагрузкиОбменаДанными"", ИспользоватьРежимЗагрузкиОбменаДанными);
	СтруктураПараметров.Вставить(""РежимРаботы"", РежимРаботы);
	
	ФормаНастроек = ПолучитьФорму(ПолучитьПолноеИмяФормы(""ФормаНастроекУправляемая""), СтруктураПараметров, ЭтаФорма);
	РезультатОткрытия = ОткрытьФормуМодально(ФормаНастроек);
	
	Если ТипЗнч(РезультатОткрытия) = Тип(""Структура"") Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, РезультатОткрытия);
	КонецЕсли;
	
КонецПроцедуры

//Процедура-обработчик команды ""Проголосовать""
//
&НаКлиенте
Процедура Проголосовать(Команда)
	
	ЗапуститьПриложение(""http://infostart.ru/public/122215/?rate=1"");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСписка(Команда)
	
	Если ОбъектПоиска <> Неопределено Тогда
		ПараметрыФормы = Новый Структура();
		Если Элементы.НайденныеОбъекты.ТекущиеДанные <> Неопределено Тогда
			ПараметрыФормы.Вставить(""ТекущаяСтрока"", Элементы.НайденныеОбъекты.ТекущиеДанные.Объект);
		КонецЕсли; 
		ОткрытьФорму(ОбъектПоиска.ПолноеИмя + "".ФормаСписка"", ПараметрыФормы);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиОбработок(Команда)
	
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	
	ДиалогВыбораФайла.Фильтр                      =	НСтр(""ru = 'Файл сохраненной настройки (*.sav)|*.sav'"");
	ДиалогВыбораФайла.Заголовок                   =	НСтр(""ru = 'Выберите файл'"");
	ДиалогВыбораФайла.ПредварительныйПросмотр     =	Ложь;
	ДиалогВыбораФайла.Расширение                  =	""sav"";
	ДиалогВыбораФайла.ИндексФильтра               =	0;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла =	 Истина;
	ДиалогВыбораФайла.ПолноеИмяФайла = НСтр(""ru = 'НастройкиОбработокУниверсальныйПодбор.sav'"");
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ИмяФайла = ДиалогВыбораФайла.ПолноеИмяФайла;
		АдресВХранилище = """";
		Если НЕ СохранитьНастройкиОбработокСервер(АдресВХранилище) Тогда
			Предупреждение(НСтр(""ru = 'Настройка не сохранена!!!'""));
		Иначе
			ПолучитьФайл(АдресВХранилище, ИмяФайла, Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиОтборов(Команда)
	
	Если ОбъектПоиска.Количество() = 0 Тогда
		Предупреждение(НСтр(""ru = 'Не указан объект поиска!!!'""));
	КонецЕсли; 
	
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	
	ДиалогВыбораФайла.Фильтр                      =	НСтр(""ru = 'Файл сохраненной настройки (*.sav)|*.sav'"");
	ДиалогВыбораФайла.Заголовок                   =	НСтр(""ru = 'Выберите файл'"");
	ДиалогВыбораФайла.ПредварительныйПросмотр     =	Ложь;
	ДиалогВыбораФайла.Расширение                  =	""sav"";
	ДиалогВыбораФайла.ИндексФильтра               =	0;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла =	 Истина;
	ДиалогВыбораФайла.ПолноеИмяФайла = НСтр(""ru = 'НастройкиОтборовУниверсальныйПодбор.sav'"");
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ИмяФайла = ДиалогВыбораФайла.ПолноеИмяФайла;
		АдресВХранилище = """";
		Если НЕ СохранитьНастройкиОтборовСервер(АдресВХранилище) Тогда
			Предупреждение(НСтр(""ru = 'Настройки не сохранены!!!'""));
		Иначе
			ПолучитьФайл(АдресВХранилище, ИмяФайла, Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиОбработок(Команда)
	
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр                      =	НСтр(""ru = 'Файл сохраненной настройки (*.sav)|*.sav'"");
	ДиалогВыбораФайла.Заголовок                   =	НСтр(""ru = 'Выберите файл'"");
	ДиалогВыбораФайла.ПредварительныйПросмотр     =	Ложь;
	ДиалогВыбораФайла.Расширение                  =	""sav"";
	ДиалогВыбораФайла.ИндексФильтра               =	0;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла =	 Ложь;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ИмяФайла = ДиалогВыбораФайла.ПолноеИмяФайла;
		Адрес = """";
		ПоместитьФайл(Адрес, ИмяФайла, ИмяФайла, Ложь, ЭтаФорма.УникальныйИдентификатор);
		ЗагрузитьНастройкиОбработокСервер(Адрес);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиОтборов(Команда)
	
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр                      =	НСтр(""ru = 'Файл сохраненной настройки (*.sav)|*.sav'"");
	ДиалогВыбораФайла.Заголовок                   =	НСтр(""ru = 'Выберите файл'"");
	ДиалогВыбораФайла.ПредварительныйПросмотр     =	Ложь;
	ДиалогВыбораФайла.Расширение                  =	""sav"";
	ДиалогВыбораФайла.ИндексФильтра               =	0;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла =	 Ложь;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ИмяФайла = ДиалогВыбораФайла.ПолноеИмяФайла;
		Адрес = """";
		ПоместитьФайл(Адрес, ИмяФайла, ИмяФайла, Ложь, ЭтаФорма.УникальныйИдентификатор);
		ЗагрузитьНастройкиОтборовСервер(Адрес);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиОбработок(Команда)
	
	ВыбранныеОбработки.Очистить();
	ДоступныеОбработки.ПолучитьЭлементы().Очистить();
	
	ОчиститьКомандыКонтекстноеМенюНайденныеОбъекты();
	ОчиститьНастройкиОбработокСервер();
	УстановитьКартинкиОбработок();
	ЗаполнитьКонтекстноеМенюНайденныеОбъекты();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокОбработок(Команда)
	
	ОчиститьКомандыКонтекстноеМенюНайденныеОбъекты();
	ОчиститьНастройкиОбработокСервер();
	УстановитьКартинкиОбработок();
	ЗаполнитьКонтекстноеМенюНайденныеОбъекты();
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройкиПоиска(Команда)
	
	ПриИзмененииОбъектаПоиска(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВВыбранныеОбработки(Команда)
	
	СтрДоступных = Элементы.ДоступныеОбработки.ТекущиеДанные;
	Если СтрДоступных = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	СтрДоступных.Идентификатор = СтрДоступных.ПолучитьИдентификатор();
	
	НовСтр = ВыбранныеОбработки.Добавить();
	НовСтр.ОбработкаНастройка = СтрДоступных.Обработка;
	НовСтр.СтрокаДоступнойОбработки = СтрДоступных.ПолучитьИдентификатор();
	НовСтр.Выбрать = Истина;
	НовСтр.Настройка = СтрДоступных.Настройка;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьОбработку(Команда)
	
	Если НайденныеОбъекты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	Для Каждого ТекущаяСтрока Из ДоступныеОбработки.ПолучитьЭлементы() Цикл
		Если ТекущаяСтрока.ИмяФормы = Команда.Имя Тогда
			ОткрытьФормуОбработки(ТекущаяСтрока);
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры",
{4,23,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",15002a7f-aa3f-4526-ab21-7e0ef310990d}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"ОбъектПоиска",
{1,1,
{"ru","Объект поиска"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"ОбъектПоискаПредставление",
{1,1,
{"ru","Объект поиска представление"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"ТекстЗапроса",
{1,1,
{"ru","Текст запроса"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"ДоступныеОбработки",
{1,1,
{"ru","Доступные обработки"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,6,
{5,1,0,"Обработка",
{1,1,
{"ru","Обработка"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ИмяФормы",
{1,1,
{"ru","Имя формы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Настройка",
{1,1,
{"ru","Настройка"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"мИспользоватьНастройки",
{1,1,
{"ru","М использовать настройки"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"Идентификатор",
{1,1,
{"ru","Идентификатор"}
},
{"Pattern",
{"N",10,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{9},0,"ВыбранныеОбработки",
{1,1,
{"ru","Выбранные обработки"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,4,
{5,1,0,"ОбработкаНастройка",
{1,1,
{"ru","Настройка"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"СтрокаДоступнойОбработки",
{1,1,
{"ru","Строка доступной обработки"}
},
{"Pattern",
{"N",10,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Выбрать",
{1,1,
{"ru","Выбрать"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Настройка",
{1,1,
{"ru","Настройка"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{10},0,"НайденныеОбъекты",
{1,1,
{"ru","Найденные объекты"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,3,
{5,1,0,"Объект",
{1,1,
{"ru","Объект"}
},
{"Pattern",
{"#",280f5f0e-9c8a-49cc-bf6d-4d296cc17a63},
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Выбрать",
{1,1,
{"ru","Выбрать"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Картинка",
{1,0},
{"Pattern",
{"N",1,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{11},0,"ДобавленныеРеквизиты",
{1,1,
{"ru","Добавленные реквизиты"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{12},0,"ДобавленныеЭлементы",
{1,1,
{"ru","Добавленные элементы"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ОтборДанных",
{1,1,
{"ru","Отбор данных"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"СтрокаПоиска",
{1,1,
{"ru","Строка поиска"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{13},0,"РежимОтбора",
{1,1,
{"ru","Режим отбора"}
},
{"Pattern",
{"N",1,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"ПараметрыЗапроса",
{1,1,
{"ru","Параметры запроса"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,1,0,3,
{5,1,0,"ИмяПараметра",
{1,1,
{"ru","Параметр"}
},
{"Pattern",
{"S",100,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ЭтоВыражение",
{1,1,
{"ru","Это выражение"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"ЗначениеПараметра",
{1,1,
{"ru","Значение"}
},
{"Pattern",
{"#",280f5f0e-9c8a-49cc-bf6d-4d296cc17a63},
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3},
{"B"},
{"S"},
{"D"},
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{14},0,"ТекстПроизвольногоЗапроса",
{1,1,
{"ru","Текст произвольного запроса"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{15},0,"ОбрабатыватьВТранзакции",
{1,1,
{"ru","Обрабатывать в транзакции"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,1,0,0,
{0,0},
{0,0}
},
{9,
{16},0,"ИспользоватьРежимЗагрузкиОбменаДанными",
{1,1,
{"ru","Использовать режим загрузки обмена данными"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,1,0,0,
{0,0},
{0,0}
},
{9,
{18},0,"КомпоновщикНастроек",
{1,1,
{"ru","Компоновщик настроек"}
},
{"Pattern",
{"#",cab0d12b-3c88-4993-8edc-8c3827cadc7d}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{19},0,"СтруктураФорм",
{1,1,
{"ru","Структура форм"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{17},0,"ИменаПолейТЧ",
{1,1,
{"ru","Имена полей ТЧ"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{20},0,"СписокОбъектовМетаданных",
{1,1,
{"ru","Список объектов метаданных"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{21},0,"ОбъектыПоиска",
{1,1,
{"ru","Объекты поиска"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{22},0,"КоличествоОбъектовНаТранзакцию",
{1,1,
{"ru","Количество объектов на транзакцию"}
},
{"Pattern",
{"N",10,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{23},0,"РежимРаботы",
{1,1,
{"ru","Режим работы"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,18,
{6,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"НайтиОбъекты",
{1,1,
{"ru","Найти объекты"}
},
{1,1,
{"ru","Найти объекты"}
},
{0,
{0,
{"B",1},0}
},
{0,120,0},
{3,1,
{0,ffab30f1-da11-44b5-b34c-24da22badcf4},"",-1,-1,1,0},"НайтиОбъекты",2,0,0,
{0,0}
},
{6,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыбратьВсе",
{1,1,
{"ru","Выбрать все"}
},
{1,1,
{"ru","Выбрать все"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{-10},"",-1,-1,1,0},"ВыбратьВсе",3,0,0,
{0,0}
},
{6,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОтменитьВыборВсех",
{1,1,
{"ru","Отменить выбор всех"}
},
{1,1,
{"ru","Отменить выбор всех"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{-11},"",-1,-1,1,0},"ОтменитьВыборВсех",3,0,0,
{0,0}
},
{6,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьОбработку",
{1,1,
{"ru","Выполнить"}
},
{1,1,
{"ru","Выполнить обработку"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,0ce78048-0196-4f80-a781-9829cdb7f43e},"",-1,-1,1,0},"ВыполнитьОбработку",2,0,0,
{0,0}
},
{6,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Отбор",
{1,1,
{"ru","Настройки отбора"}
},
{1,1,
{"ru","Отбор"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,d90a7482-9a1d-4d3d-ae96-6db440214d96},"",-1,-1,1,0},"Отбор",2,0,0,
{0,0}
},
{6,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыбратьВсеОбработки",
{1,1,
{"ru","Выбрать все"}
},
{1,1,
{"ru","Выбрать все"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{-10},"",-1,-1,1,0},"ВыбратьВсеОбработки",3,0,0,
{0,0}
},
{6,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОтменитьВыборВсехОбработок",
{1,1,
{"ru","Отменить выбор всех"}
},
{1,1,
{"ru","Отменить выбор всех"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{-11},"",-1,-1,1,0},"ОтменитьВыборВсехОбработок",3,0,0,
{0,0}
},
{6,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"НастройкиОбработки",
{1,1,
{"ru","Общие настройки"}
},
{1,1,
{"ru","Настройки обработки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,ee7c4a5b-2d9b-4087-ae3e-947792085f09},"",-1,-1,1,0},"НастройкиОбработки",3,0,0,
{0,0}
},
{6,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Проголосовать",
{1,1,
{"ru","Сказать спасибо"}
},
{1,1,
{"ru","Проголосовать за обработку на Инфостарт.ру"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,1001ae3e-9289-4303-9699-3c0c17e20e61},"",-1,-1,1,0},"Проголосовать",2,0,0,
{0,0}
},
{6,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОткрытьФормуСписка",
{1,1,
{"ru","Открыть список"}
},
{1,1,
{"ru","Открыть форму списка текущего объекта"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,894afc03-9904-465d-b671-f555ffb9b21c},"",-1,-1,1,0},"ОткрытьФормуСписка",2,0,0,
{0,0}
},
{6,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СохранитьНастройкиОбработок",
{1,1,
{"ru","Сохранить настройки обработок в файл"}
},
{1,1,
{"ru","Сохранить настройки обработок в файл"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,23f940bf-7381-4c2b-85a1-e541ed428042},"",-1,-1,1,0},"СохранитьНастройкиОбработок",3,0,0,
{0,0}
},
{6,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНастройкиОбработок",
{1,1,
{"ru","Загрузить настройки обработок из файла"}
},
{1,1,
{"ru","Загрузить настройки обработок из файла"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,a7707ed1-39b0-418f-974d-4d500d27a9c6},"",-1,-1,1,0},"ЗагрузитьНастройкиОбработок",3,0,0,
{0,0}
},
{6,
{13,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОчиститьНастройкиОбработок",
{1,1,
{"ru","Очистить настройки и обновить список обработок"}
},
{1,1,
{"ru","Очистить настройки обработок и обновить список"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{-2},"",-1,-1,1,0},"ОчиститьНастройкиОбработок",3,0,0,
{0,0}
},
{6,
{14,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СброситьНастройкиПоиска",
{1,1,
{"ru","Сбросить настройки поиска"}
},
{1,1,
{"ru","Обновить данные объекта поиска и очистить настройки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,fc4f29e0-d168-4fe0-8e64-e982fabf2595},"",-1,-1,1,0},"СброситьНастройкиПоиска",1,0,0,
{0,0}
},
{6,
{15,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОбновитьСписокОбработок",
{1,1,
{"ru","Обновить список доступных обработок"}
},
{1,1,
{"ru","Обновить список обработок"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,fc4f29e0-d168-4fe0-8e64-e982fabf2595},"",-1,-1,1,0},"ОбновитьСписокОбработок",3,0,0,
{0,0}
},
{6,
{16,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СохранитьНастройкиОтборов",
{1,1,
{"ru","Сохранить настройки отборов в файл"}
},
{1,1,
{"ru","Сохранить настройки отборов в файл"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,b5a0aaba-3a83-4a71-b6f9-24aae1574681},"",-1,-1,1,0},"СохранитьНастройкиОтборов",3,0,0,
{0,0}
},
{6,
{17,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНастройкиОтборов",
{1,1,
{"ru","Загрузить настройки отборов из файла"}
},
{1,1,
{"ru","Загрузить настройки отборов из файла"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,283ecabd-aaed-41d1-ad46-6cca91c29120},"",-1,-1,1,0},"ЗагрузитьНастройкиОтборов",3,0,0,
{0,0}
},
{6,
{18,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПеренестиВВыбранныеОбработки",
{1,1,
{"ru","Перенести в выбранные обработки"}
},
{1,1,
{"ru","Перенести в выбранные обработки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{-9},"",-1,-1,1,0},"ПеренестиВВыбранныеОбработки",1,0,0,
{0,0}
}
},
{0,0},
{0,0}
}