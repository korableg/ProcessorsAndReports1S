{2,
{28,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Перенумерация объектов"}
},0,0,1,1,1,0,1,0,
{2,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере"},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяНастройка",1,0,
{1,1,
{"ru","Текущая настройка"}
},
{1,0},
{1,
{6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{26,
{1,0},0,0,2,2,1,2,2,2,2,1,0,2,2,2,
{"U"},
{"U"},"",0,
{3,0,
{0},"",-1,-1,1,0},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{2,b3b65989-73ac-4db3-b6cb-398cb41a062f,"ТекущаяНастройкаНачалоВыбораИзСписка",f72043b8-2d79-414e-bc4e-3972fe9dbca1,"ТекущаяНастройкаОбработкаВыбора"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},1,
{3,0,0},0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТекущаяНастройкаПриИзменении"},1,
{17,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТекущаяНастройкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа1",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{12,1,0,0,0,
{0},
{1,0},
{"Pattern"},""},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"НачальныйНомер",1,0,
{1,0},
{1,0},
{1,
{7}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{26,
{1,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{3,0,
{0},"",-1,-1,1,0},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},1,
{3,0,0},0},
{0},1,
{17,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"НачальныйНомерКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"НеИзменятьЧисловуюНумерацию",4,0,
{1,0},
{1,0},
{1,
{8}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{7,0,
{3,4,
{0}
},
{3,4,
{0}
}
},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"НеИзменятьЧисловуюНумерациюПриИзменении"},1,
{17,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"НеИзменятьЧисловуюНумерациюКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},1},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ПрефиксыНомеров",
{1,1,
{"ru","Префиксы номеров"}
},
{1,1,
{"ru","Префиксы номеров"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{12,0,0,2,1,
{0},
{1,0},
{"Pattern"},""},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{15,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"СтрокаПрефикса",1,0,
{1,0},
{1,0},
{1,
{10}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{26,
{1,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{3,0,
{0},"",-1,-1,1,0},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},1,
{3,0,0},0},
{0},1,
{17,
{16,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"СтрокаПрефиксаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"СпособОбработкиПрефиксов",0,0,
{1,0},
{1,0},
{1,
{9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{5,
{1,5,"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"N",1},b0be78f2-0ee6-4d31-a3bb-77dd32ba5bec,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Не изменять существующие префиксы"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"N",2},b0be78f2-0ee6-4d31-a3bb-77dd32ba5bec,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Заменить существующие префиксы на введенную строку"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"N",3},b0be78f2-0ee6-4d31-a3bb-77dd32ba5bec,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Добавить введенную строку в начало существующих префиксов"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"N",4},b0be78f2-0ee6-4d31-a3bb-77dd32ba5bec,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Добавить введенную строку в конец существующих префиксов"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"N",5},b0be78f2-0ee6-4d31-a3bb-77dd32ba5bec,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Заменить подстроку"}
}
}
}
},5,
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СпособОбработкиПрефиксовПриИзменении"},1,
{17,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"СпособОбработкиПрефиксовКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{19,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗаменяемаяПодстрока",4,0,
{1,1,
{"ru"," у существующих префиксов на введенную строку"}
},
{1,0},
{1,
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{26,
{1,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{3,0,
{0},"",-1,-1,1,0},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},1,
{3,0,0},0},
{0},1,
{17,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ЗаменяемаяПодстрокаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},1},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{17,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ГруппаКнопки",
{1,1,
{"ru","Группа кнопки"}
},
{1,1,
{"ru","Группа кнопки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,2,
{0}
},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ВыполнитьОбработку",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,1,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"СохранитьНастройки",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"Закрыть",
{1,0},1,
{0,3772996b-41f4-4c47-a5a8-ea397db424ae},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",0},1},"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"//Признак использования настроек
&НаКлиенте
Перем мИспользоватьНастройки Экспорт;

//Типы объектов, для которых может использоваться обработка.
//По умолчанию для всех.
&НаКлиенте
Перем мТипыОбрабатываемыхОбъектов Экспорт;

&НаКлиенте
Перем мНастройка;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Определяет и устанавливает Тип и Длинну номера объекта
//
// Параметры:
//  Нет.
//
&НаСервере
Процедура ОпределитьТипИДлинуНомера()
	ИмяТипаОбъектов = ОбъектПоиска.Тип;
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ОбъектПоиска.Тип + ""."" + ОбъектПоиска.Имя);
	Если ИмяТипаОбъектов = ""Документ"" ИЛИ ИмяТипаОбъектов = ""БизнесПроцесс"" ИЛИ ИмяТипаОбъектов = ""Задача"" Тогда
		ТипНомера   = Строка(ОбъектМетаданных.ТипНомера);
		ДлинаНомера = ОбъектМетаданных.ДлинаНомера;
	ИначеЕсли ИмяТипаОбъектов = ""Справочник"" Тогда
		ТипНомера   = Строка(ОбъектМетаданных.ТипКода);
		ДлинаНомера = ОбъектМетаданных.ДлинаКода;
	КонецЕсли; 
КонецПроцедуры // ()

// Выполняет обработку объектов.
//
// Параметры:
//  Объект                 - обрабатываемый объект.
//  ПорядковыйНомерОбъекта - порядковый номер обрабатываемого объекта.
//
&НаСервере
Процедура ОбработатьОбъект(Ссылка, сч, НеУникальныеНомера, МаксимальныйНомер, ЧисловаяЧастьНомера)
	
	Объект = Ссылка.ПолучитьОбъект();
	//[begin] Added by Sergey. http://infostart.ru/profile/18346/
	//25.03.2012 21:03:04
	Если ЭтаФорма.ИспользоватьРежимЗагрузкиОбменаДанными Тогда
		Объект.ОбменДанными.Загрузка = Истина;
	КонецЕсли; 
	//[end] Added 
	
	Если ТипНомера = ""Число"" Тогда 
		Если Не НеИзменятьЧисловуюНумерацию Тогда
			Если ИмяТипаОбъектов = ""Документ"" ИЛИ ИмяТипаОбъектов = ""БизнесПроцесс"" ИЛИ ИмяТипаОбъектов = ""Задача"" Тогда
				Объект.Номер = ЧисловаяЧастьНомера;
			Иначе
				Объект.Код = ЧисловаяЧастьНомера;
			КонецЕсли; 
			Попытка
				Объект.Записать();
			Исключение
				Если ИмяТипаОбъектов = ""Документ"" ИЛИ ИмяТипаОбъектов = ""БизнесПроцесс"" ИЛИ ИмяТипаОбъектов = ""Задача"" Тогда
					Объект.Номер = МаксимальныйНомер - Сч;
				Иначе
					Объект.Код = МаксимальныйНомер - Сч;
				КонецЕсли; 
				Объект.Записать();
				НеУникальныеНомера.Вставить(ЧисловаяЧастьНомера, Объект.Ссылка);
			КонецПопытки;		
			ЧисловаяЧастьНомера = ЧисловаяЧастьНомера + 1;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	
	Если ИмяТипаОбъектов = ""Документ"" ИЛИ ИмяТипаОбъектов = ""БизнесПроцесс"" ИЛИ ИмяТипаОбъектов = ""Задача"" Тогда
		ТекНомер = СокрЛП(Объект.Номер);
	Иначе
		ТекНомер = СокрЛП(Объект.Код);
	КонецЕсли;
	
	Если НеИзменятьЧисловуюНумерацию Тогда
		СтроковаяЧастьНомера = ПолучитьПрефиксЧислоНомера(ТекНомер, ЧисловаяЧастьНомера);
	Иначе
		СтроковаяЧастьНомера = ПолучитьПрефиксЧислоНомера(ТекНомер);
	КонецЕсли;				
	
	
	Если 	  СпособОбработкиПрефиксов = 1 Тогда
		НовыйНомер = СтроковаяЧастьНомера;
	ИначеЕсли СпособОбработкиПрефиксов = 2 Тогда
		НовыйНомер = СокрЛП(СтрокаПрефикса);
	ИначеЕсли СпособОбработкиПрефиксов = 3 Тогда
		НовыйНомер = СокрЛП(СтрокаПрефикса) + СтроковаяЧастьНомера;
	ИначеЕсли СпособОбработкиПрефиксов = 4 Тогда
		НовыйНомер = СтроковаяЧастьНомера + СокрЛП(СтрокаПрефикса);
	ИначеЕсли СпособОбработкиПрефиксов = 5 Тогда
		НовыйНомер = СтрЗаменить(СтроковаяЧастьНомера, СокрЛП(ЗаменяемаяПодстрока), СокрЛП(СтрокаПрефикса));
	КонецЕсли;
	
	Пока ДлинаНомера - СтрДлина(НовыйНомер) - СтрДлина(Формат(ЧисловаяЧастьНомера,""ЧГ=0"")) > 0 Цикл
		НовыйНомер = НовыйНомер + ""0"";
	КонецЦикла;
	
	НовыйНомер 	 = НовыйНомер + Формат(ЧисловаяЧастьНомера,""ЧГ=0"");
	
	Если ИмяТипаОбъектов = ""Документ"" ИЛИ ИмяТипаОбъектов = ""БизнесПроцесс"" ИЛИ ИмяТипаОбъектов = ""Задача"" Тогда
		Объект.Номер = НовыйНомер;
	Иначе
		Объект.Код = НовыйНомер;
	КонецЕсли; 
	
	Попытка
		Объект.Записать();
	Исключение
		Если ИмяТипаОбъектов = ""Документ"" ИЛИ ИмяТипаОбъектов = ""БизнесПроцесс"" ИЛИ ИмяТипаОбъектов = ""Задача"" Тогда
			Объект.Номер = Формат(МаксимальныйНомер - Сч, ""ЧГ=0"");
		Иначе
			Объект.Код = Формат(МаксимальныйНомер - Сч, ""ЧГ=0"");
		КонецЕсли; 
		Объект.Записать();			
		НеУникальныеНомера.Вставить(НовыйНомер, Объект.Ссылка);
	КонецПопытки;		
	
	Если Не НеИзменятьЧисловуюНумерацию Тогда
		ЧисловаяЧастьНомера = ЧисловаяЧастьНомера + 1;
	КонецЕсли;
	
КонецПроцедуры // ОбработатьОбъект()

&НаСервере
Процедура ПроверитьНеУникальныеНомера(НеУникальныеНомера)
	Для каждого Зн Из НеУникальныеНомера Цикл
		НовыйНомер   = Зн.Ключ;
		Объект       = Зн.Значение.ПолучитьОбъект();
		Если ИмяТипаОбъектов = ""Документ"" ИЛИ ИмяТипаОбъектов = ""БизнесПроцесс"" ИЛИ ИмяТипаОбъектов = ""Задача"" Тогда
			Объект.Номер = НовыйНомер;
		Иначе
			Объект.Код = НовыйНомер;
		КонецЕсли; 
		Попытка
			Объект.Записать();
		Исключение
			Сообщить(""Повтор номера: "" + НовыйНомер + "" за пределами данной выборки!"");
		КонецПопытки;		
	КонецЦикла;
КонецПроцедуры

// Выполняет обработку объектов.
//
// Параметры:
//  Нет.
//
&НаКлиенте
Функция ВыполнитьОбработку() Экспорт
	
	Если (НачальныйНомер = 0) И (Не НеИзменятьЧисловуюНумерацию) Тогда
		Предупреждение(""Измените начальный номер!"");
		Возврат 0;
	КонецЕсли;
	
	Если ЭтаФорма.РежимРаботы ИЛИ ЭтаФорма.ОбрабатыватьВТранзакции Тогда
		сч = ВыполнитьОбработкуСервер();
	Иначе                  
		ОпределитьТипИДлинуНомера();
		Если (СпособОбработкиПрефиксов = 1) И (НеИзменятьЧисловуюНумерацию) Тогда
			Возврат 0;
		КонецЕсли;
		
		Если Не НеИзменятьЧисловуюНумерацию Тогда 
			ЧисловаяЧастьНомера = НачальныйНомер;
		КонецЕсли;
		
		НеУникальныеНомера = Новый Соответствие;
		МаксимальныйНомер  = Число(ДополнитьСтрокуСимволами("""", ДлинаНомера, ""9""));
		
		Индикатор = ПолучитьИндикаторПроцесса(НайденныеОбъекты.Количество());
		Для сч = 0 По НайденныеОбъекты.Количество() - 1 Цикл
			ОбработатьИндикатор(Индикатор, сч + 1);
			
			Объект = НайденныеОбъекты.Получить(сч).Значение;
			ОбработатьОбъект(Объект, сч, НеУникальныеНомера, МаксимальныйНомер, ЧисловаяЧастьНомера);
		КонецЦикла;
		
		ПроверитьНеУникальныеНомера(НеУникальныеНомера);
		
		
	КонецЕсли;
	
	Если сч > 0 Тогда
		ОповеститьОбИзменении(Тип(ОбъектПоиска.Тип + ""Ссылка."" + ОбъектПоиска.Имя));
	КонецЕсли;
	
	Возврат сч;
КонецФункции // вВыполнитьОбработку()

//[begin] Added by Sergey. http://infostart.ru/profile/18346/
//27.03.2012 22:26:55
// Выполняет обработку объектов.
//
// Параметры:
//  Нет.
//
&НаСервере
Функция ВыполнитьОбработкуСервер() Экспорт
	
	НачатьЗафиксироватьТранзакцию(ЭтаФорма.ОбрабатыватьВТранзакции, Истина);
	ОпределитьТипИДлинуНомера();
	Если (СпособОбработкиПрефиксов = 1) И (НеИзменятьЧисловуюНумерацию) Тогда
		Возврат 0;
	КонецЕсли;
	
	Если Не НеИзменятьЧисловуюНумерацию Тогда 
		ЧисловаяЧастьНомера = НачальныйНомер;
	КонецЕсли;
	
	НеУникальныеНомера = Новый Соответствие;
	МаксимальныйНомер  = Число(ДополнитьСтрокуСимволами("""", ДлинаНомера, ""9""));
	
	Для Индекс = 0 По НайденныеОбъекты.Количество() - 1 Цикл
		Если ЭтаФорма.ОбрабатыватьВТранзакции И ЭтаФорма.КоличествоОбъектовНаТранзакцию > 0 Тогда
			Если Индекс > 0 И Индекс % ЭтаФорма.КоличествоОбъектовНаТранзакцию = 0 Тогда
				НачатьЗафиксироватьТранзакцию(ЭтаФорма.ОбрабатыватьВТранзакции, Ложь);
				НачатьЗафиксироватьТранзакцию(ЭтаФорма.ОбрабатыватьВТранзакции, Истина);
			КонецЕсли; 
		КонецЕсли; 
		Объект = НайденныеОбъекты.Получить(Индекс).Значение;
		ОбработатьОбъект(Объект, Индекс, НеУникальныеНомера, МаксимальныйНомер, ЧисловаяЧастьНомера);
	КонецЦикла;
	
	ПроверитьНеУникальныеНомера(НеУникальныеНомера);
	НачатьЗафиксироватьТранзакцию(ЭтаФорма.ОбрабатыватьВТранзакции, Ложь);
	
	Возврат Индекс;
КонецФункции // ВыполнитьОбработкуСервер()
//[end] Added 

// Сохраняет значения реквизитов формы.
//
// Параметры:
//  Нет.
//
&НаКлиенте
Процедура СохранитьНастройку() Экспорт
	
	Если ПустаяСтрока(ТекущаяНастройкаПредставление) Тогда
		Предупреждение(""Задайте имя новой настройки для сохранения или выберите существующую настройку для перезаписи."");
	КонецЕсли;
	
	НоваяНастройка = Новый Структура;
	НоваяНастройка.Вставить(""Обработка"", ТекущаяНастройкаПредставление);
	НоваяНастройка.Вставить(""Прочее"", Новый Структура);
	
	Для каждого РеквизитНастройки из мНастройка Цикл
		Выполнить(""НоваяНастройка.Прочее.Вставить(Строка(РеквизитНастройки.Ключ), "" + Строка(РеквизитНастройки.Ключ) + "");"");
	КонецЦикла;
	
	ДоступныеОбработки = ЭтаФорма.ВладелецФормы.ДоступныеОбработки;
	ТекущаяДоступнаяНастройка = Неопределено;
	Для Каждого ТекущаяДоступнаяНастройка Из ДоступныеОбработки.ПолучитьЭлементы() Цикл
		Если ТекущаяДоступнаяНастройка.ПолучитьИдентификатор() = Родитель Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ТекущаяНастройка = Неопределено ИЛИ НЕ ТекущаяНастройка.Обработка = ТекущаяНастройкаПредставление Тогда
		Если ТекущаяДоступнаяНастройка <> Неопределено Тогда
			НоваяСтрока = ТекущаяДоступнаяНастройка.ПолучитьЭлементы().Добавить();
			НоваяСтрока.Обработка = ТекущаяНастройкаПредставление;
			НоваяСтрока.Настройка.Добавить(НоваяНастройка);
			
			ЭтаФорма.ВладелецФормы.Элементы.ДоступныеОбработки.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущаяДоступнаяНастройка <> Неопределено И ТекущаяСтрока > -1 Тогда
		Для Каждого ТекНастройка Из ТекущаяДоступнаяНастройка.ПолучитьЭлементы() Цикл
			Если ТекНастройка.ПолучитьИдентификатор() = ТекущаяСтрока Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ТекНастройка.Настройка.Количество() = 0 Тогда
			ТекНастройка.Настройка.Добавить(НоваяНастройка);
		Иначе
			ТекНастройка.Настройка[0].Значение = НоваяНастройка;
		КонецЕсли;
	КонецЕсли;
	
	ТекущаяНастройка = НоваяНастройка;
	ЭтаФорма.Модифицированность = Ложь;
КонецПроцедуры // вСохранитьНастройку()

// Восстанавливает сохраненные значения реквизитов формы.
//
// Параметры:
//  Нет.
//
&НаКлиенте
Процедура ЗагрузитьНастройку() Экспорт
	
	Если Элементы.ТекущаяНастройка.СписокВыбора.Количество() = 0 Тогда
		УстановитьИмяНастройки(""Новая настройка"");
	Иначе
		Если НЕ ТекущаяНастройка.Прочее = Неопределено Тогда
			мНастройка = ТекущаяНастройка.Прочее;
		КонецЕсли;
	КонецЕсли;
	
	Для каждого РеквизитНастройки из мНастройка Цикл
		Значение = мНастройка[РеквизитНастройки.Ключ];
		Выполнить(Строка(РеквизитНастройки.Ключ) + "" = Значение;"");
	КонецЦикла;
	
	СпособОбработкиПрефиксовПриИзменении("""");
	НеИзменятьЧисловуюНумерациюПриИзменении("""");
КонецПроцедуры //вЗагрузитьНастройку()

// Устанавливает значение реквизита ""ТекущаяНастройка"" по имени настройки или произвольно.
//
// Параметры:
//  ИмяНастройки   - произвольное имя настройки, которое необходимо установить.
//
&НаКлиенте
Процедура УстановитьИмяНастройки(ИмяНастройки = """") Экспорт
	
	Если ПустаяСтрока(ИмяНастройки) Тогда
		Если ТекущаяНастройка = Неопределено Тогда
			ТекущаяНастройкаПредставление = """";
		Иначе
			ТекущаяНастройкаПредставление = ТекущаяНастройка.Обработка;
		КонецЕсли;
	Иначе
		ТекущаяНастройкаПредставление = ИмяНастройки;
	КонецЕсли;
	
КонецПроцедуры // вУстановитьИмяНастройки()

// Получает структуру для индикации прогресса цикла.
//
// Параметры:
//  КоличествоПроходов – Число - максимальное значение счетчика;
//  ПредставлениеПроцесса – Строка, ""Выполнено"" – отображаемое название процесса;
//  ВнутреннийСчетчик - Булево, *Истина - использовать внутренний счетчик с начальным значением 1,
//                    иначе нужно будет передавать значение счетчика при каждом вызове обновления индикатора;
//  КоличествоОбновлений - Число, *100 - всего количество обновлений индикатора;
//  ЛиВыводитьВремя - Булево, *Истина - выводить приблизительное время до окончания процесса;
//  РазрешитьПрерывание - Булево, *Истина - разрешает пользователю прерывать процесс.
//
// Возвращаемое значение:
//  Структура - которую потом нужно будет передавать в метод ЛксОбработатьИндикатор.
//
&НаКлиенте
Функция ПолучитьИндикаторПроцесса(КоличествоПроходов, ПредставлениеПроцесса = ""Выполнено"", ВнутреннийСчетчик = Истина,
	КоличествоОбновлений = 100, ЛиВыводитьВремя = Истина, РазрешитьПрерывание = Истина) Экспорт 
	
	Индикатор = Новый Структура;
	Индикатор.Вставить(""КоличествоПроходов"", КоличествоПроходов);
	Индикатор.Вставить(""ДатаНачалаПроцесса"", ТекущаяДата());
	Индикатор.Вставить(""ПредставлениеПроцесса"", ПредставлениеПроцесса);
	Индикатор.Вставить(""ЛиВыводитьВремя"", ЛиВыводитьВремя);
	Индикатор.Вставить(""РазрешитьПрерывание"", РазрешитьПрерывание);
	Индикатор.Вставить(""ВнутреннийСчетчик"", ВнутреннийСчетчик);
	Индикатор.Вставить(""Шаг"", КоличествоПроходов / КоличествоОбновлений);
	Индикатор.Вставить(""СледующийСчетчик"", 0);
	Индикатор.Вставить(""Счетчик"", 0);
	Возврат Индикатор;
	
КонецФункции // ЛксПолучитьИндикаторПроцесса()

// Проверяет и обновляет индикатор. Нужно вызывать на каждом проходе индицируемого цикла.
//
// Параметры:
//  Индикатор    – Структура – индикатора, полученная методом ЛксПолучитьИндикаторПроцесса;
//  Счетчик      – Число – внешний счетчик цикла, используется при ВнутреннийСчетчик = Ложь.
//
&НаКлиенте
Процедура ОбработатьИндикатор(Индикатор, Счетчик = 0) Экспорт 
	
	Если Индикатор.ВнутреннийСчетчик Тогда
		Индикатор.Счетчик = Индикатор.Счетчик + 1;
		Счетчик = Индикатор.Счетчик;
	КонецЕсли;
	Если Индикатор.РазрешитьПрерывание Тогда
		ОбработкаПрерыванияПользователя();
	КонецЕсли;
	
	Если Счетчик > Индикатор.СледующийСчетчик Тогда
		Индикатор.СледующийСчетчик = Цел(Счетчик + Индикатор.Шаг);
		Если Индикатор.ЛиВыводитьВремя Тогда
			ПрошлоВремени = ТекущаяДата() - Индикатор.ДатаНачалаПроцесса;
			Осталось = ПрошлоВремени * (Индикатор.КоличествоПроходов / Счетчик - 1);
			Часов = Цел(Осталось / 3600);
			Осталось = Осталось - (Часов * 3600);
			Минут = Цел(Осталось / 60);
			Секунд = Цел(Цел(Осталось - (Минут * 60)));
			ОсталосьВремени = Формат(Часов, ""ЧЦ=2; ЧН=00; ЧВН="") + "":"" 
			+ Формат(Минут, ""ЧЦ=2; ЧН=00; ЧВН="") + "":"" 
			+ Формат(Секунд, ""ЧЦ=2; ЧН=00; ЧВН="");
			ТекстОсталось = ""Осталось: ~"" + ОсталосьВремени;
		Иначе
			ТекстОсталось = """";
		КонецЕсли;
		
		Если Индикатор.КоличествоПроходов > 0 Тогда
			ТекстСостояния = ТекстОсталось;
		Иначе
			ТекстСостояния = """";
		КонецЕсли;
		
		Состояние(Индикатор.ПредставлениеПроцесса, Счетчик / Индикатор.КоличествоПроходов * 100, ТекстСостояния);
	КонецЕсли;
	
	Если Счетчик = Индикатор.КоличествоПроходов Тогда
		Состояние(Индикатор.ПредставлениеПроцесса, 100, ТекстСостояния);
	КонецЕсли;
	
КонецПроцедуры // ЛксОбработатьИндикатор()

// Разбирает строку выделяя из нее префикс и числовую часть
//
// Параметры:
//  Стр            - Строка. Разбираемая строка
//  ЧисловаяЧасть  - Число. Переменная в которую возвратится числовая часть строки
//  Режим          - Строка. Если ""Число"", то возвратит числовую часть иначе - префикс
//
// Возвращаемое значение:
//  Префикс строки
//              
&НаСервере
Функция ПолучитьПрефиксЧислоНомера(Знач Стр, ЧисловаяЧасть="""", Режим="""") Экспорт
	
	Стр		=	СокрЛП(Стр);
	Префикс	=	Стр;
	Длина	=	СтрДлина(Стр);
	
	Для Сч = 1 По Длина Цикл
		Попытка
			ЧисловаяЧасть = Число(Стр);
		Исключение
			Стр = Прав(Стр, Длина - Сч);
			Продолжить;
		КонецПопытки; 
		
		Если (ЧисловаяЧасть > 0) И (СтрДлина(Формат(ЧисловаяЧасть, ""ЧГ=0"")) = Длина - Сч + 1) Тогда 
			Префикс	=	Лев(Префикс, Сч - 1);
			
			Пока Прав(Префикс, 1) = ""0"" Цикл
				Префикс = Лев(Префикс, СтрДлина(Префикс)-1);
			КонецЦикла;
			
			Прервать;
		Иначе
			Стр = Прав(Стр, Длина - Сч);
		КонецЕсли;
		
		Если ЧисловаяЧасть < 0 Тогда	ЧисловаяЧасть = - ЧисловаяЧасть		КонецЕсли;
		
	КонецЦикла;
	
	Если Режим = ""Число"" Тогда
		Возврат(ЧисловаяЧасть);
	Иначе
		Возврат(Префикс);
	КонецЕсли;
	
КонецФункции // вПолучитьПрефиксЧислоНомера()

// Приводит номер (код) к требуемой длине. При этом выделяется префикс
// и числовая часть номера, остальное пространство между префиксом и
// номером заполняется нулями
//
// Параметры:
//  Стр            - Преобразовываемая строка
//  Длина          - Требуемая длина строки
//
// Возвращаемое значение:
//  Строка - код или номер, приведенная к требуемой длине
// 
&НаСервере
Функция ПривестиНомерКДлине(Знач Стр, Длина) Экспорт
	
	Стр			    =	СокрЛП(Стр);
	
	ЧисловаяЧасть	=	"""";
	Результат		=	ПолучитьПрефиксЧислоНомера(Стр, ЧисловаяЧасть);
	Пока Длина - СтрДлина(Результат) - СтрДлина(Формат(ЧисловаяЧасть, ""ЧГ=0"")) > 0 Цикл
		Результат	=	Результат + ""0"";
	КонецЦикла;
	Результат	=	Результат + Формат(ЧисловаяЧасть, ""ЧГ=0"");
	
	Возврат(Результат);
	
КонецФункции // вПривестиНомерКДлине()

// Добавляет к префиксу номера или кода подстроку
//
// Параметры:
//  Стр            - Строка. Номер или код
//  Добавок        - Добаляемая к префиксу подстрока
//  Длина          - Требуемая результрирубщая длина строки
//  Режим          - ""Слева"" - подстрока добавляется слева к префиксу, иначе - справа
//
// Возвращаемое значение:
//  Строка - номер или код, к префиксу которого добавлена указанная подстрока
//                                                                                                     
&НаСервере
Функция ДобавитьКПрефиксу(Знач Стр, Добавок="""", Длина="""", Режим=""Слева"") Экспорт
	
	Стр = СокрЛП(Стр);
	
	Если ПустаяСтрока(Длина) Тогда
		Длина = СтрДлина(Стр);
	КонецЕсли;
	
	ЧисловаяЧасть	=	"""";
	Префикс			=	ПолучитьПрефиксЧислоНомера(Стр, ЧисловаяЧасть);
	Если Режим=""Слева"" Тогда
		Результат	=	СокрЛП(Добавок) + Префикс;
	Иначе
		Результат	=	Префикс + СокрЛП(Добавок);
	КонецЕсли;
	
	Пока Длина - СтрДлина(Результат) - СтрДлина(Формат(ЧисловаяЧасть, ""ЧГ=0"")) > 0 Цикл
		Результат	=	Результат + ""0"";
	КонецЦикла;
	Результат	=	Результат + Формат(ЧисловаяЧасть, ""ЧГ=0"");
	
	Возврат(Результат);
	
КонецФункции // вДобавитьКПрефиксу()

// Дополняет строку указанным символом до указанной длины
//
// Параметры: 
//  Стр            - Дополняемая строка
//  Длина          - Требуемая длина результирующей строки
//  Чем            - Символ, которым дополняется строка
//
// Возвращаемое значение:
//  Строка дополненная указанным символом до указанной длины
//
&НаСервере
Функция ДополнитьСтрокуСимволами(Стр="""", Длина, Чем="" "") Экспорт
	Результат = СокрЛП(Стр);
	Пока Длина - СтрДлина(Результат) > 0 Цикл
		Результат	=	Результат + Чем;
	КонецЦикла;
	Возврат(Результат);
КонецФункции // вДополнитьСтрокуСимволами() 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОпределитьТипИДлинуНомера();
	Если ТипНомера <> ""Строка"" Тогда
		Элементы.ПрефиксыНомеров.Видимость = Ложь; 
	КонецЕсли;
	
	Если мИспользоватьНастройки Тогда
		УстановитьИмяНастройки();
		ЗагрузитьНастройку();
	Иначе
		Элементы.ТекущаяНастройка.Доступность = Ложь;
		Элементы.СохранитьНастройки.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство(""Настройка"") Тогда
		ТекущаяНастройка = Параметры.Настройка;
	КонецЕсли;
	Если Параметры.Свойство(""НайденныеОбъекты"") Тогда
		НайденныеОбъекты.ЗагрузитьЗначения(Параметры.НайденныеОбъекты);
	КонецЕсли;
	ТекущаяСтрока = -1;
	Если Параметры.Свойство(""ТекущаяСтрока"") Тогда
		Если Параметры.ТекущаяСтрока <> Неопределено Тогда
			ТекущаяСтрока = Параметры.ТекущаяСтрока;
		КонецЕсли;
	КонецЕсли;
	Если Параметры.Свойство(""Родитель"") Тогда
		Родитель = Параметры.Родитель;
	КонецЕсли;
	
	Если Параметры.Свойство(""ОбъектПоиска"") Тогда
		ОбъектПоиска = Параметры.ОбъектПоиска;
	КонецЕсли;
	
	Элементы.ТекущаяНастройка.СписокВыбора.Очистить();
	Если Параметры.Свойство(""Настройки"") Тогда
		Для Каждого Строка из Параметры.Настройки Цикл
			Элементы.ТекущаяНастройка.СписокВыбора.Добавить(Строка, Строка.Обработка);
		КонецЦикла;
	КонецЕсли;
	
	//[begin] Added by Sergey. http://infostart.ru/profile/18346/
	//25.03.2012 21:01:51
	ДобавляемыеРеквизиты = Новый Массив();
	Реквизит = Новый РеквизитФормы(""ОбрабатыватьВТранзакции"", Новый ОписаниеТипов(""Булево""), , , Истина);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы(""ИспользоватьРежимЗагрузкиОбменаДанными"", Новый ОписаниеТипов(""Булево""), , ""Режим загрузки обмена данными (минимальный контроль)"", Истина);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	ОписаниеТиповЧисло = Новый ОписаниеТипов(""Число"",Новый КвалификаторыЧисла(10,0,ДопустимыйЗнак.Неотрицательный));
	Реквизит = Новый РеквизитФормы(""КоличествоОбъектовНаТранзакцию"", ОписаниеТиповЧисло, , , Истина);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы(""РежимРаботы"", Новый ОписаниеТипов(""Булево""), , ""Обработка объектов на сервере"", Истина);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Если Параметры.Свойство(""ОбрабатыватьВТранзакции"") Тогда
		ЭтаФорма.ОбрабатыватьВТранзакции = Параметры.ОбрабатыватьВТранзакции;
	КонецЕсли;
	Если Параметры.Свойство(""ИспользоватьРежимЗагрузкиОбменаДанными"") Тогда
		ЭтаФорма.ИспользоватьРежимЗагрузкиОбменаДанными = Параметры.ИспользоватьРежимЗагрузкиОбменаДанными;
	КонецЕсли;
	Если Параметры.Свойство(""КоличествоОбъектовНаТранзакцию"") Тогда
		ЭтаФорма.КоличествоОбъектовНаТранзакцию = Параметры.КоличествоОбъектовНаТранзакцию;
	КонецЕсли;
	Если Параметры.Свойство(""РежимРаботы"") Тогда
		ЭтаФорма.РежимРаботы = Параметры.РежимРаботы;
	КонецЕсли;
	
	Если Параметры.Свойство(""ОбъектПоиска"") Тогда
		ЭлементГруппа = Элементы.Вставить(""ГруппаРежимРаботы"", Тип(""ГруппаФормы""),, Элементы.ГруппаКнопки);
		ЭлементГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппа.Отображение = ОтображениеОбычнойГруппы.Нет;
		ЭлементГруппа.ОтображатьЗаголовок = Ложь;
		ЭлементГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ЭлементГруппа.РастягиватьПоГоризонтали = Истина;
			
		Если ОбъектПоиска.Тип <> ""РегистрСведений"" Тогда
			НовыйЭлемент = Элементы.Добавить(""РежимРаботы"", Тип(""ПолеФормы""), ЭлементГруппа);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
			НовыйЭлемент.ПутьКДанным = ""РежимРаботы"";
			НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		КонецЕсли; 
		Если ОбъектПоиска.Тип <> ""РегистрСведений"" И ОбъектПоиска.Тип <> ""ПланОбмена"" Тогда
			НовыйЭлемент = Элементы.Добавить(""ИспользоватьРежимЗагрузкиОбменаДанными"", Тип(""ПолеФормы""), ЭлементГруппа);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
			НовыйЭлемент.ПутьКДанным = ""ИспользоватьРежимЗагрузкиОбменаДанными"";
			НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		КонецЕсли; 
	КонецЕсли;
	//[end] Added 
	
КонецПроцедуры

//[begin] Added by Sergey. http://infostart.ru/profile/18346/
//25.03.2012 21:02:14
&НаСервереБезКонтекста
Процедура НачатьЗафиксироватьТранзакцию(ОбрабатыватьВТранзакции, НачалоТранзакции = Ложь)  
	
	Если ОбрабатыватьВТранзакции Тогда
		Если НачалоТранзакции Тогда
			НачатьТранзакцию();
		ИначеЕсли ТранзакцияАктивна() Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли;  //  
	КонецЕсли; 
	
КонецПроцедуры //НачатьЗафиксироватьТранзакцию
//[end] Added 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ, ВЫЗЫВАЕМЫЕ ИЗ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ВыполнитьОбработкуКоманда(Команда)
	//[begin] Added by Sergey. http://infostart.ru/profile/18346/
	//25.03.2012 21:02:35
	ОбработаноОбъектов = ВыполнитьОбработку();
	//[end] Added 
	
	Предупреждение(""Обработка <"" + СокрЛП(ЭтаФорма.Заголовок) + ""> завершена!
	|Обработано объектов: "" + ОбработаноОбъектов + ""."")
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиКоманда(Команда)
	СохранитьНастройку();
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяНастройкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ТекущаяНастройка = ВыбранноеЗначение Тогда
		
		Если ЭтаФорма.Модифицированность Тогда
			Если Вопрос(""Сохранить текущую настройку?"", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да) = КодВозвратаДиалога.Да Тогда
				СохранитьНастройку();
			КонецЕсли;
		КонецЕсли;
		
		ТекущаяНастройка = ВыбранноеЗначение;
		УстановитьИмяНастройки();
		
		ЗагрузитьНастройку();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяНастройкаПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НеИзменятьЧисловуюНумерациюПриИзменении(Элемент)
	Элементы.НачальныйНомер.Доступность = НЕ НеИзменятьЧисловуюНумерацию;
КонецПроцедуры

&НаКлиенте
Процедура СпособОбработкиПрефиксовПриИзменении(Элемент)
	Если СпособОбработкиПрефиксов = 1 Тогда 
		Элементы.СтрокаПрефикса.Доступность      = Ложь;
		Элементы.ЗаменяемаяПодстрока.Доступность = Ложь;
	ИначеЕсли СпособОбработкиПрефиксов = 5 Тогда 
		Элементы.СтрокаПрефикса.Доступность      = Истина;
		Элементы.ЗаменяемаяПодстрока.Доступность = Истина;
	Иначе
		Элементы.СтрокаПрефикса.Доступность      = Истина;
		Элементы.ЗаменяемаяПодстрока.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ИНИЦИАЛИЗАЦИЯ МОДУЛЬНЫХ ПЕРЕМЕННЫХ

мИспользоватьНастройки = Истина;

//Реквизиты настройки и значения по умолчанию.
мНастройка = Новый Структура(""НачальныйНомер,НеИзменятьЧисловуюНумерацию,СтрокаПрефикса,ЗаменяемаяПодстрока,СпособОбработкиПрефиксов, РежимРаботы, ИспользоватьРежимЗагрузкиОбменаДанными"");

мНастройка.НачальныйНомер              = 1;
мНастройка.НеИзменятьЧисловуюНумерацию = Ложь;
мНастройка.СпособОбработкиПрефиксов    = 1;

мТипыОбрабатываемыхОбъектов = ""Справочник,Документ,Задача,БизнесПроцесс"";",
{4,15,
{9,
{1},0,"ОбъектОбработки",
{1,1,
{"ru","Объект обработки"}
},
{"Pattern",
{"#",15002a7f-aa3f-4526-ab21-7e0ef310990d}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"ТекущаяНастройка",
{1,1,
{"ru","Текущая настройка"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"НайденныеОбъекты",
{1,1,
{"ru","Найденные объекты"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"ТекущаяНастройкаПредставление",
{1,1,
{"ru","Текущая настройка представление"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"ТекущаяСтрока",
{1,1,
{"ru","Текущая строка"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ЗаменяемаяПодстрока",
{1,1,
{"ru","Заменяемая подстрока"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"НачальныйНомер",
{1,1,
{"ru","Начальный номер"}
},
{"Pattern",
{"N",10,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"НеИзменятьЧисловуюНумерацию",
{1,1,
{"ru","Не изменять числовую нумерацию"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{9},0,"СпособОбработкиПрефиксов",
{1,1,
{"ru","Способ обработки префиксов"}
},
{"Pattern",
{"N",1,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{10},0,"СтрокаПрефикса",
{1,1,
{"ru","Строка префикса"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{11},0,"Родитель",
{1,1,
{"ru","Родитель"}
},
{"Pattern",
{"N",10,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{12},0,"ОбъектПоиска",
{1,1,
{"ru","Объект поиска"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{13},0,"ИмяТипаОбъектов",
{1,1,
{"ru","Имя типа объектов"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{14},0,"ТипНомера",
{1,1,
{"ru","Тип номера"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{15},0,"ДлинаНомера",
{1,1,
{"ru","Длина номера"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,2,
{6,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьКоманду",
{1,1,
{"ru","Выполнить"}
},
{1,1,
{"ru","Выполнить команду"}
},
{0,
{0,
{"B",1},0}
},
{0,120,0},
{3,1,
{0,0ce78048-0196-4f80-a781-9829cdb7f43e},"",-1,-1,1,0},"ВыполнитьОбработкуКоманда",2,0,0,
{0,0}
},
{6,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СохранитьНастройки",
{1,1,
{"ru","Сохранить настройки"}
},
{1,1,
{"ru","Сохранить настройки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{3,1,
{0,818ab7d0-4654-4542-bd5e-fd9d1352b5a1},"",-1,-1,1,0},"СохранитьНастройкиКоманда",2,0,0,
{0,0}
}
},
{0,0},
{0,0}
}